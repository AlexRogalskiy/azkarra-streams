memberSearchIndex = [{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"PropertiesFileLoginModule","l":"abort()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AbstractAuthentication","l":"AbstractAuthentication(Principal, T)","url":"%3Cinit%3E(java.security.Principal,T)"},{"p":"io.streamthoughts.azkarra.api.config","c":"AbstractConf","l":"AbstractConf()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"ClassComponentAliasesGenerator.ClassAliasExtractor","l":"accept(Class<?>)","url":"accept(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"ClassComponentAliasesGenerator.DropClassNameSuffixExtractor","l":"accept(Class<?>)","url":"accept(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"addAliases(Set<String>)","url":"addAliases(java.util.Set)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"ClassComponentAliasesGenerator","l":"addClassAliasExtractor(ClassComponentAliasesGenerator.ClassAliasExtractor)","url":"addClassAliasExtractor(io.streamthoughts.azkarra.runtime.components.ClassComponentAliasesGenerator.ClassAliasExtractor)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addComponent(Class<T>)","url":"addComponent(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addComponent(Class<T>)","url":"addComponent(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addComponent(ComponentFactory<T>)","url":"addComponent(io.streamthoughts.azkarra.api.components.ComponentFactory)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addComponent(ComponentFactory<T>)","url":"addComponent(io.streamthoughts.azkarra.api.components.ComponentFactory)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addComponent(String)","url":"addComponent(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addComponent(String)","url":"addComponent(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addConfiguration(Conf)","url":"addConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addConfiguration(Conf)","url":"addConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"addConfiguration(Conf)","url":"addConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentClassReader","l":"addDescriptorFactoryForType(Class<T>, ComponentDescriptorFactory<T>)","url":"addDescriptorFactoryForType(java.lang.Class,io.streamthoughts.azkarra.api.components.ComponentDescriptorFactory)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultProviderClassReader","l":"addDescriptorFactoryForType(Class<T>, ComponentDescriptorFactory<T>)","url":"addDescriptorFactoryForType(java.lang.Class,io.streamthoughts.azkarra.api.components.ComponentDescriptorFactory)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addExecutionEnvironment(StreamsExecutionEnvironment)","url":"addExecutionEnvironment(io.streamthoughts.azkarra.api.StreamsExecutionEnvironment)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addExecutionEnvironment(StreamsExecutionEnvironment)","url":"addExecutionEnvironment(io.streamthoughts.azkarra.api.StreamsExecutionEnvironment)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"addFallbackConfiguration(Conf)","url":"addFallbackConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"addFallbackConfiguration(Conf)","url":"addFallbackConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"addGlobalStateListener(StateRestoreListener)","url":"addGlobalStateListener(org.apache.kafka.streams.processor.StateRestoreListener)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"addGlobalStateListener(StateRestoreListener)","url":"addGlobalStateListener(org.apache.kafka.streams.processor.StateRestoreListener)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeUncaughtExceptionHandler","l":"addHandler(Thread.UncaughtExceptionHandler)","url":"addHandler(java.lang.Thread.UncaughtExceptionHandler)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addListener(AzkarraContextListener)","url":"addListener(io.streamthoughts.azkarra.api.AzkarraContextListener)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addListener(AzkarraContextListener)","url":"addListener(io.streamthoughts.azkarra.api.AzkarraContextListener)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateListener","l":"addListener(KafkaStreams.StateListener)","url":"addListener(org.apache.kafka.streams.KafkaStreams.StateListener)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"addNewEnvironment(String, Conf)","url":"addNewEnvironment(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"addNewEnvironment(String, Conf)","url":"addNewEnvironment(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"addSource(Class<?>)","url":"addSource(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"addSources(Class<?>...)","url":"addSources(java.lang.Class...)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"addStateListener(KafkaStreams.StateListener)","url":"addStateListener(org.apache.kafka.streams.KafkaStreams.StateListener)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"addStateListener(KafkaStreams.StateListener)","url":"addStateListener(org.apache.kafka.streams.KafkaStreams.StateListener)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addTopology(Class<? extends TopologyProvider>, Executed)","url":"addTopology(java.lang.Class,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addTopology(Class<? extends TopologyProvider>, Executed)","url":"addTopology(java.lang.Class,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addTopology(Class<? extends TopologyProvider>, String, Executed)","url":"addTopology(java.lang.Class,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addTopology(Class<? extends TopologyProvider>, String, Executed)","url":"addTopology(java.lang.Class,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addTopology(String, Executed)","url":"addTopology(java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addTopology(String, Executed)","url":"addTopology(java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addTopology(String, String, Executed)","url":"addTopology(java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addTopology(String, String, Executed)","url":"addTopology(java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"addTopology(String, String, String, Executed)","url":"addTopology(java.lang.String,java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"addTopology(String, String, String, Executed)","url":"addTopology(java.lang.String,java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"addTopology(Supplier<TopologyProvider>, Executed)","url":"addTopology(java.util.function.Supplier,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"addTopology(Supplier<TopologyProvider>, Executed)","url":"addTopology(java.util.function.Supplier,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"addTopology(Supplier<TopologyProvider>)","url":"addTopology(java.util.function.Supplier)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"addTopology(Supplier<TopologyProvider>)","url":"addTopology(java.util.function.Supplier)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"InMemoryUserIdentityManager","l":"addUsers(UserDetails)","url":"addUsers(io.streamthoughts.azkarra.http.security.auth.UserDetails)"},{"p":"io.streamthoughts.azkarra.api.streams.admin","c":"AdminClientUtils","l":"AdminClientUtils()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.health","c":"HealthAggregator","l":"aggregate(List<Health>)","url":"aggregate(java.util.List)"},{"p":"io.streamthoughts.azkarra.http.health","c":"StatusAggregator","l":"aggregateStatus(List<Status>)","url":"aggregateStatus(java.util.List)"},{"p":"io.streamthoughts.azkarra.http.health.internal","c":"DefaultStatusAggregator","l":"aggregateStatus(List<Status>)","url":"aggregateStatus(java.util.List)"},{"p":"io.streamthoughts.azkarra.api.annotations","c":"TopologyInfo","l":"aliases()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"aliases()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"ALL"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"all()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"all()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UserDetails","l":"allGrantedAuthorities()"},{"p":"io.streamthoughts.azkarra.api.util","c":"FutureCollectors","l":"allOf()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryError","l":"allOf(List<Error>)","url":"allOf(java.util.List)"},{"p":"io.streamthoughts.azkarra.http.security","c":"AllowAllHostNameVerifier","l":"AllowAllHostNameVerifier()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationResult","l":"ALLOWED"},{"p":"io.streamthoughts.azkarra.api.errors","c":"AlreadyExistsException","l":"AlreadyExistsException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiApplicationsRoutes","l":"ApiApplicationsRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiContextRoutes","l":"ApiContextRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiDefaultRoutes","l":"ApiDefaultRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiEnvironmentRoutes","l":"ApiEnvironmentRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiHealthRoutes","l":"ApiHealthRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiInfoRoutes","l":"ApiInfoRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiStreamsRoutes","l":"ApiStreamsRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiTopologyRoutes","l":"ApiTopologyRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiVersionRoutes","l":"ApiVersionRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http","c":"APIVersions","l":"APIVersions()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ApplicationGetInstancesHandler","l":"ApplicationGetInstancesHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ApplicationGetTopologyHandler","l":"ApplicationGetTopologyHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"applicationId()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"ApplicationId","l":"ApplicationId(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ApplicationQueryStoreHandler","l":"ApplicationQueryStoreHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"applications()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"applications()"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"applications()"},{"p":"io.streamthoughts.azkarra.runtime.util","c":"ShutdownHook.Hook","l":"apply()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Reader","l":"apply(A)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"CheckedFunction","l":"apply(T)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ArgsConf","l":"ArgsConf(String[])","url":"%3Cinit%3E(java.lang.String[])"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"as(String, String)","url":"as(java.lang.String,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"as(String)","url":"as(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"assignments()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationManager","l":"authenticate(Authentication)","url":"authenticate(io.streamthoughts.azkarra.http.security.auth.Authentication)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationManager","l":"authenticate(AuthorizationContext)","url":"authenticate(io.streamthoughts.azkarra.http.security.authorizer.AuthorizationContext)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"SimpleAuthorizationManager","l":"authenticate(AuthorizationContext)","url":"authenticate(io.streamthoughts.azkarra.http.security.authorizer.AuthorizationContext)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Authenticator","l":"authenticate(Principal, Credentials)","url":"authenticate(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.Credentials)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicAuthenticator","l":"authenticate(Principal, Credentials)","url":"authenticate(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.Credentials)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"CertClientAuthenticator","l":"authenticate(Principal, Credentials)","url":"authenticate(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.Credentials)"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"AuthenticationCallback","l":"AuthenticationCallback()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"AuthenticationContextHandler","l":"AuthenticationContextHandler(SecurityMechanism, HttpHandler)","url":"%3Cinit%3E(io.streamthoughts.azkarra.http.security.SecurityMechanism,io.undertow.server.HttpHandler)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContextHolder","l":"AuthenticationContextHolder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationContext","l":"authorities()"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationHandler","l":"AuthorizationHandler(HttpHandler, AuthorizationManager)","url":"%3Cinit%3E(io.undertow.server.HttpHandler,io.streamthoughts.azkarra.http.security.authorizer.AuthorizationManager)"},{"p":"io.streamthoughts.azkarra.streams.autoconfigure","c":"AutoConfigure","l":"AutoConfigure()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraAccount","l":"AzkarraAccount(Principal, Credentials, UserDetails)","url":"%3Cinit%3E(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.Credentials,io.streamthoughts.azkarra.http.security.auth.UserDetails)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"AzkarraApplication(Class<?>...)","url":"%3Cinit%3E(java.lang.Class...)"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"AzkarraBanner","l":"AzkarraBanner()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.errors","c":"AzkarraContextException","l":"AzkarraContextException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"AzkarraContextException","l":"AzkarraContextException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.context","c":"AzkarraContextLoader","l":"AzkarraContextLoader()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.errors","c":"AzkarraException","l":"AzkarraException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"AzkarraException","l":"AzkarraException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"AzkarraException","l":"AzkarraException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraIdentityManager","l":"AzkarraIdentityManager(Authenticator)","url":"%3Cinit%3E(io.streamthoughts.azkarra.http.security.auth.Authenticator)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraVersion","l":"AzkarraVersion()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.error","c":"BadRequestException","l":"BadRequestException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityMechanism","l":"BASIC_AUTH"},{"p":"io.streamthoughts.examples.azkarra.security","c":"BasicAuthenticationExample","l":"BasicAuthenticationExample()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicAuthenticator","l":"BasicAuthenticator(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"BasicComponentFactory","l":"BasicComponentFactory(Class<T>, boolean)","url":"%3Cinit%3E(java.lang.Class,boolean)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"BasicComponentFactory","l":"BasicComponentFactory(Class<T>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicRolePrincipal","l":"BasicRolePrincipal(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicUserPrincipal","l":"BasicUserPrincipal(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.examples.azkarra.topology","c":"BasicWordCountTopology","l":"BasicWordCountTopology()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"build()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"build()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamContainerBuilder","l":"build()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer.Builder","l":"build()"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"build()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"build()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"build()"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryBuilder","l":"build()"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"BannerPrinterBuilder","l":"build()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"LocalStoreQueryBuilder","l":"build(String, QueryParams)","url":"build(java.lang.String,io.streamthoughts.azkarra.api.query.QueryParams)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.ProcessorNodeBuilder","l":"build(TopologyDescription.Processor)","url":"build(org.apache.kafka.streams.TopologyDescription.Processor)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SinkNodeBuilder","l":"build(TopologyDescription.Sink)","url":"build(org.apache.kafka.streams.TopologyDescription.Sink)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SourceNodeBuilder","l":"build(TopologyDescription.Source)","url":"build(org.apache.kafka.streams.TopologyDescription.Source)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph","l":"build(TopologyDescription)","url":"build(org.apache.kafka.streams.TopologyDescription)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"ApplicationIdBuilder","l":"buildApplicationId(TopologyMetadata)","url":"buildApplicationId(io.streamthoughts.azkarra.api.streams.topology.TopologyMetadata)"},{"p":"io.streamthoughts.azkarra.runtime.streams","c":"DefaultApplicationIdBuilder","l":"buildApplicationId(TopologyMetadata)","url":"buildApplicationId(io.streamthoughts.azkarra.api.streams.topology.TopologyMetadata)"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"Builder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer","l":"buildKafkaStreams(ApplicationId, Conf)","url":"buildKafkaStreams(io.streamthoughts.azkarra.api.streams.ApplicationId,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AzkarraPrincipalBuilder","l":"buildPrincipal(AuthenticationContext)","url":"buildPrincipal(io.streamthoughts.azkarra.http.security.auth.AuthenticationContext)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"buildQuery(String, StoreOperation)","url":"buildQuery(java.lang.String,io.streamthoughts.azkarra.api.query.StoreOperation)"},{"p":"io.streamthoughts.azkarra.http.query","c":"QueryURLBuilder","l":"buildURL(String, String, String)","url":"buildURL(java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"canBeInstantiated(Class<?>)","url":"canBeInstantiated(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"CertClientAuthenticator","l":"CertClientAuthenticator()","url":"%3Cinit%3E()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"ExceptionHeader","l":"CLASS_NAME"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"ClassComponentAliasesGenerator","l":"ClassComponentAliasesGenerator()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"className()"},{"p":"io.streamthoughts.azkarra.streams.components","c":"ClasspathComponentScanner","l":"ClasspathComponentScanner(ComponentClassReader, ComponentRegistry)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.components.ComponentClassReader,io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"ClassUtils()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContextHolder","l":"clearContext()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityMechanism","l":"CLIENT_CERT_AUTH"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationContext","l":"clientAddress()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"close()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"close()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"close(boolean)"},{"p":"io.streamthoughts.azkarra.api.streams.rocksdb","c":"DefaultRocksDBConfigSetter","l":"close(String, Options)","url":"close(java.lang.String,org.rocksdb.Options)"},{"p":"io.streamthoughts.azkarra.http.prometheus","c":"KafkaStreamsMetricsCollector","l":"collect()"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"PropertiesFileLoginModule","l":"commit()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"compareTo(ComponentDescriptor<T>)","url":"compareTo(io.streamthoughts.azkarra.api.components.ComponentDescriptor)"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"compareTo(KV<K, V>)","url":"compareTo(io.streamthoughts.azkarra.api.model.KV)"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"compareTo(Metric)","url":"compareTo(io.streamthoughts.azkarra.api.model.Metric)"},{"p":"io.streamthoughts.azkarra.api.model","c":"MetricGroup","l":"compareTo(MetricGroup)","url":"compareTo(io.streamthoughts.azkarra.api.model.MetricGroup)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node","l":"compareTo(StreamsTopologyGraph.Node)","url":"compareTo(io.streamthoughts.azkarra.api.model.StreamsTopologyGraph.Node)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SubTopologyGraph","l":"compareTo(StreamsTopologyGraph.SubTopologyGraph)","url":"compareTo(io.streamthoughts.azkarra.api.model.StreamsTopologyGraph.SubTopologyGraph)"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"compareTo(TimestampedValue)","url":"compareTo(io.streamthoughts.azkarra.api.model.TimestampedValue)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopicPartitions","l":"compareTo(TopicPartitions)","url":"compareTo(io.streamthoughts.azkarra.api.streams.TopicPartitions)"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"compareTo(Version)","url":"compareTo(io.streamthoughts.azkarra.api.util.Version)"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ComplexWordCountTopology","l":"ComplexWordCountTopology()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ComplexWordCountTopologyModule","l":"ComplexWordCountTopologyModule()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"ComponentDescriptor(Class<T>, String)","url":"%3Cinit%3E(java.lang.Class,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"ComponentDescriptor(Class<T>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"ComponentModule(Class<T>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig","l":"components()"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateListener","l":"CompositeStateListener()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateListener","l":"CompositeStateListener(Collection<KafkaStreams.StateListener>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateRestoreListener","l":"CompositeStateRestoreListener(Collection<StateRestoreListener>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeUncaughtExceptionHandler","l":"CompositeUncaughtExceptionHandler()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"conf()"},{"p":"io.streamthoughts.azkarra.api.errors","c":"ConfException","l":"ConfException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"ConfException","l":"ConfException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"ConfException","l":"ConfException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"config"},{"p":"io.streamthoughts.azkarra.http.handler","c":"EnvironmentPostHandler.EnvironmentPayload","l":"config"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"config()"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"InternalExecuted","l":"config()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig","l":"config()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"config()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"configDef()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ConfigurableStopWordsService","l":"ConfigurableStopWordsService()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.examples.azkarra.topology","c":"ConfigurableWordCountTopology","l":"ConfigurableWordCountTopology()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"configuration()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"OptimizedTopologyProvider","l":"configuration()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Configurable","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"OptimizedTopologyProvider","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http","c":"UndertowEmbeddedServer","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiDefaultRoutes","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiInfoRoutes","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"InMemoryUserIdentityManager","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"SimpleAuthorizationManager","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ComplexWordCountTopology","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ConfigurableStopWordsService","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.examples.azkarra.topology","c":"ConfigurableWordCountTopology","l":"configure(Conf)","url":"configure(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandler","l":"configure(Map<String, ?>)","url":"configure(java.util.Map)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"ConfSerializer","l":"ConfSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.banner","c":"Banner.Mode","l":"CONSOLE"},{"p":"io.streamthoughts.azkarra.api.util","c":"Utils","l":"contains(char[], char)","url":"contains(char[],char)"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryParams","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig","l":"CONTEXT_COMPONENT_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig","l":"CONTEXT_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig","l":"CONTEXT_ENVIRONMENTS_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig","l":"context()"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ContextGetHandler","l":"ContextGetHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ContextGetHandler.ContextPayload","l":"ContextPayload(Conf)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"COUNT"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"count()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"create()"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"create()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"create(ComponentClassReader)","url":"create(io.streamthoughts.azkarra.api.components.ComponentClassReader)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"create(ComponentRegistry)","url":"create(io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"create(Conf, String)","url":"create(io.streamthoughts.azkarra.api.config.Conf,java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"create(Conf)","url":"create(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"create(Conf)","url":"create(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"create(Map<String, ? extends Object>)","url":"create(java.util.Map)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"create(Properties)","url":"create(java.util.Properties)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"create(String)","url":"create(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"create(String)","url":"create(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"State","l":"CREATED"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"CREATED"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"CREATED"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UserDetails","l":"credentials()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"customHeaders()"},{"p":"io.streamthoughts.examples.azkarra.healthcheck","c":"CustomHealthCheckExample","l":"CustomHealthCheckExample()","url":"%3Cinit%3E()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"DEAD_LETTER_HEADERS_PREFIX"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"DEAD_LETTER_TOPIC_CONFIG"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"DEAD_LETTER_TOPIC_DOC"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandler","l":"DeadLetterTopicExceptionHandler()","url":"%3Cinit%3E()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"DeadLetterTopicExceptionHandlerConfig(Map<String, ?>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"DEFAULT_ENV_NAME"},{"p":"io.streamthoughts.azkarra.runtime.streams","c":"DefaultApplicationIdBuilder","l":"DefaultApplicationIdBuilder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"DefaultAuthenticationCallbackHandler","l":"DefaultAuthenticationCallbackHandler()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"DefaultComponentRegistry()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"defaultExecutionEnvironment()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"defaultExecutionEnvironment()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultProviderClassReader","l":"DefaultProviderClassReader()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.streams.rocksdb","c":"DefaultRocksDBConfigSetter","l":"DefaultRocksDBConfigSetter()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.health.internal","c":"DefaultStatusAggregator","l":"DefaultStatusAggregator()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.health.internal","c":"DefaultStatusAggregator","l":"DefaultStatusAggregator(List<Status>)","url":"%3Cinit%3E(java.util.List)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"DefaultStreamsExecutionEnvironment(Conf)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"deleteStreams(String)","url":"deleteStreams(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"deleteStreams(String)","url":"deleteStreams(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"InMemoryUserIdentityManager","l":"deleteUsersByName(String)","url":"deleteUsersByName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationResult","l":"DENIED"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"description"},{"p":"io.streamthoughts.azkarra.api.annotations","c":"TopologyInfo","l":"description()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"description()"},{"p":"io.streamthoughts.azkarra.api.providers","c":"TopologyDescriptor","l":"description()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"description()"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"InternalExecuted","l":"description()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"description()"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"InternalExecuted","l":"descriptionOrElseGet(String)","url":"descriptionOrElseGet(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"deserialize(byte[], Class<T>)","url":"deserialize(byte[],java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"deserialize(byte[])"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"deserialize(InputStream, Class<T>)","url":"deserialize(java.io.InputStream,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"deserialize(InputStream)","url":"deserialize(java.io.InputStream)"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"deserialize(JsonNode, Class<T>)","url":"deserialize(com.fasterxml.jackson.databind.JsonNode,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.query","c":"JsonQuerySerde","l":"deserialize(String, byte[])","url":"deserialize(java.lang.String,byte[])"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"deserialize(String, Class<T>)","url":"deserialize(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"DigestPasswordCredentials","l":"DigestPasswordCredentials(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"disableHeadlessMode()"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"disableSsl()"},{"p":"io.streamthoughts.azkarra.api.query","c":"DistributedQuery","l":"DistributedQuery(RemoteQueryClient, PreparedQuery<K, V>)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.query.RemoteQueryClient,io.streamthoughts.azkarra.api.query.internal.PreparedQuery)"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"DOWN"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"down()"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"DTF"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"EMPTY"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"empty()"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryParams","l":"empty()"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"empty()"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"EmptyConf()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"ENABLE_WAIT_FOR_TOPICS_CONFIG"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"enableHeadlessMode()"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"enableHttpServer(boolean, Conf)","url":"enableHttpServer(boolean,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"enableHttpServer(boolean, HttpServerConf)","url":"enableHttpServer(boolean,io.streamthoughts.azkarra.streams.config.HttpServerConf)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"enableHttpServer(boolean)"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryBuilder","l":"enablePasswordAuthentication(boolean)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"enableSsl()"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"enableUI(boolean)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig","l":"ENVIRONMENT_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig","l":"ENVIRONMENT_NAME_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig","l":"ENVIRONMENT_STREAMS_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.autoconfigure.annotations","c":"EnableAutoStart","l":"environment()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"Environment(String, State, Map<String, Object>, Set<String>, boolean)","url":"%3Cinit%3E(java.lang.String,io.streamthoughts.azkarra.api.State,java.util.Map,java.util.Set,boolean)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"EnvironmentGetListHandler","l":"EnvironmentGetListHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"EnvironmentPostHandler.EnvironmentPayload","l":"EnvironmentPayload(String, Map<String, Object>)","url":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"EnvironmentPostHandler","l":"EnvironmentPostHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"environments()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"environments()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig","l":"environments()"},{"p":"io.streamthoughts.azkarra.api.errors","c":"Error","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.model","c":"MetricGroup","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetRangeQuery","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyedLocalStoreQuery","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.server","c":"ServerInfo","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"ApplicationId","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopicPartitions","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraAccount","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicRolePrincipal","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicUserPrincipal","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"DigestPasswordCredentials","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"RoleGrantedAuthority","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"ERROR"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"ERROR"},{"p":"io.streamthoughts.azkarra.api.errors","c":"Error","l":"Error(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"Error","l":"Error(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.data","c":"ErrorMessage","l":"ErrorMessage(int, String, String, String)","url":"%3Cinit%3E(int,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.data","c":"ErrorMessage","l":"ErrorMessage(int, String, String)","url":"%3Cinit%3E(int,java.lang.String,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.data","c":"ErrorMessage","l":"ErrorMessage(int, String, Throwable, String)","url":"%3Cinit%3E(int,java.lang.String,java.lang.Throwable,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"ErrorResultSet","l":"ErrorResultSet(String, boolean, List<QueryError>)","url":"%3Cinit%3E(java.lang.String,boolean,java.util.List)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"ErrorResultSet","l":"ErrorResultSet(String, boolean, QueryError)","url":"%3Cinit%3E(java.lang.String,boolean,io.streamthoughts.azkarra.api.query.result.QueryError)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"exception()"},{"p":"io.streamthoughts.azkarra.http.error","c":"ExceptionDefaultHandler","l":"ExceptionDefaultHandler()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.error","c":"ExceptionDefaultResponseListener","l":"ExceptionDefaultResponseListener()","url":"%3Cinit%3E()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"ExceptionHeader","l":"ExceptionHeader()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Retry","l":"exceptionType()"},{"p":"io.streamthoughts.azkarra.http","c":"ExchangeHelper","l":"ExchangeHelper()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.query","c":"LocalStoreQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueCountQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetAllQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetRangeQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"PreparedQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionFetchKeyRangeQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionFetchQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchAllQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchKeyRangeQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchTimeRangeQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowGetAllQuery","l":"execute(KafkaStreamsContainer, Queried)","url":"execute(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"Executed()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"Executed(Executed)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"ExecutionException","l":"ExecutionException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.LeftProjection","l":"exists()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.RightProjection","l":"exists()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"ClassComponentAliasesGenerator.ClassAliasExtractor","l":"extractAlias(Class<?>)","url":"extractAlias(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"ClassComponentAliasesGenerator.DropClassNameSuffixExtractor","l":"extractAlias(Class<?>)","url":"extractAlias(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"failable(CheckedSupplier<V, E>)","url":"failable(io.streamthoughts.azkarra.api.monad.CheckedSupplier)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"FAILED"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"failure(Throwable)","url":"failure(java.lang.Throwable)"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"FATAL_ERRORS_CONFIG"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"FATAL_ERRORS_DOC"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"FETCH"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"FETCH_ALL"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"FETCH_KEY_RANGE"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"FETCH_TIME_RANGE"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionQueryBuilder","l":"fetch()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"fetch()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"fetchAll()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionQueryBuilder","l":"fetchKeyRange()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"fetchKeyRange()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"fetchTimeRange()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"findAllDescriptorByAlias(String)","url":"findAllDescriptorByAlias(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"findAllDescriptorByAlias(String)","url":"findAllDescriptorByAlias(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"findAllDescriptorsByType(Class<T>)","url":"findAllDescriptorsByType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"findAllDescriptorsByType(Class<T>)","url":"findAllDescriptorsByType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"findDescriptorByAlias(String)","url":"findDescriptorByAlias(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"findDescriptorByAlias(String)","url":"findDescriptorByAlias(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"findLatestDescriptorByAlias(String)","url":"findLatestDescriptorByAlias(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"findLatestDescriptorByAlias(String)","url":"findLatestDescriptorByAlias(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"InMemoryUserIdentityManager","l":"findUserByName(String)","url":"findUserByName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UsersIdentityManager","l":"findUserByName(String)","url":"findUserByName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Reader","l":"flatMap(Function<? super B, Reader<A, ? extends BB>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.LeftProjection","l":"flatMap(Function<? super L, Either<LL, R>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.RightProjection","l":"flatMap(Function<? super R, Either<L, RR>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"flatMap(Function<? super V, Try<B>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"flatMap(Function<? super V, Try<B>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"flatMap(Function<? super V, Try<B>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"flatMap(Function<? super V, Try<B>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"flatMap(Function<Tuple<L, R>, Tuple<LL, RR>>)","url":"flatMap(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"fold(Function<L, LL>, Function<R, RR>)","url":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either","l":"fold(Function<L, T>, Function<R, T>)","url":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"GenericRecordSerializer","l":"GenericRecordSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"GET"},{"p":"io.streamthoughts.azkarra.api.config","c":"Property","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"CheckedSupplier","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.LeftProjection","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.RightProjection","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"get()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"get()"},{"p":"io.streamthoughts.azkarra.api.providers","c":"Provider","l":"get()"},{"p":"io.streamthoughts.azkarra.api.query","c":"LocalStoreAccessor.StoreSupplier","l":"get()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"get()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"OptimizedTopologyProvider","l":"get()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopologyProvider","l":"get()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"GrantedAuthority","l":"get()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"RoleGrantedAuthority","l":"get()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ComplexWordCountTopology","l":"get()"},{"p":"io.streamthoughts.examples.azkarra.topology","c":"BasicWordCountTopology","l":"get()"},{"p":"io.streamthoughts.examples.azkarra.topology","c":"ConfigurableWordCountTopology","l":"get()"},{"p":"io.streamthoughts.azkarra.api.spi","c":"EmbeddedHttpServerProvider","l":"get(AzkarraContext)","url":"get(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.http","c":"UndertowEmbeddedServerProvider","l":"get(AzkarraContext)","url":"get(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.api.query","c":"LocalStoreAccessor","l":"get(Queried)","url":"get(io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials","l":"get(String)","url":"get(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentAliasesGenerator","l":"getAliasesFor(ComponentDescriptor, Collection<? extends ComponentDescriptor>)","url":"getAliasesFor(io.streamthoughts.azkarra.api.components.ComponentDescriptor,java.util.Collection)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"ClassComponentAliasesGenerator","l":"getAliasesFor(ComponentDescriptor, Collection<? extends ComponentDescriptor>)","url":"getAliasesFor(io.streamthoughts.azkarra.api.components.ComponentDescriptor,java.util.Collection)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"getAllComponentForType(Class<T>)","url":"getAllComponentForType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"getAllComponentForType(Class<T>)","url":"getAllComponentForType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"getAllComponents(Class<T>, Conf)","url":"getAllComponents(java.lang.Class,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"getAllComponents(Class<T>, Conf)","url":"getAllComponents(java.lang.Class,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"getAllComponents(String, Conf)","url":"getAllComponents(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"getAllComponents(String, Conf)","url":"getAllComponents(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"getAllComponentsForType(Class<C>)","url":"getAllComponentsForType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"getAllDeclaredAnnotationByType(Class<?>, Class<T>)","url":"getAllDeclaredAnnotationByType(java.lang.Class,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getAllEnvironments()"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getAllEnvironments()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getAllMetadata()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getAllMetadataForStore(String)","url":"getAllMetadataForStore(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.health","c":"StatusAggregator","l":"getAllStatus(Collection<Health>)","url":"getAllStatus(java.util.Collection)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getAllStreams()"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getAllStreams()"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"getAllSuperTypes(Class<?>)","url":"getAllSuperTypes(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContext","l":"getAuthentication()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UndertowAuthenticationContext","l":"getAuthentication()"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"AuthenticationCallback","l":"getAuthentication()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContextHolder","l":"getAuthenticationContext()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getAuthenticationMechanism()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getAuthenticationPrincipalBuilder()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getAuthenticationRealm()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getAuthenticationRestricted()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getAuthenticationRoles()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getAuthenticationUsers()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getAuthorizationManager()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getBool(Object)","url":"getBool(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getBoolean(String)","url":"getBoolean(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getBoolean(String)","url":"getBoolean(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getBoolean(String)","url":"getBoolean(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getBoolean(String)","url":"getBoolean(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getBoolean(String)","url":"getBoolean(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getBytes(Object)","url":"getBytes(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"SSLClientAuthentication","l":"getCertificate()"},{"p":"io.streamthoughts.azkarra.api.config","c":"AbstractConf","l":"getClass(String, Class<T>)","url":"getClass(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getClass(String, Class<T>)","url":"getClass(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getClass(String, Class<T>)","url":"getClass(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getClass(String, Class<T>)","url":"getClass(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.config","c":"AbstractConf","l":"getClasses(String, Class<T>)","url":"getClasses(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getClasses(String, Class<T>)","url":"getClasses(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getClasses(String, Class<T>)","url":"getClasses(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getClasses(String, Class<T>)","url":"getClasses(java.lang.String,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"getClassLoader()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContext","l":"getClientAddress()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UndertowAuthenticationContext","l":"getClientAddress()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"getCode()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"getComponent(Class<T>, Conf)","url":"getComponent(java.lang.Class,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"getComponent(Class<T>, Conf)","url":"getComponent(java.lang.Class,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"getComponent(String, Conf)","url":"getComponent(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"getComponent(String, Conf)","url":"getComponent(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"getComponentClassReader()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"getComponentClassReader()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"getComponentForClassOrAlias(String)","url":"getComponentForClassOrAlias(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"getComponentForType(Class<C>)","url":"getComponentForType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"getComponentForType(Class<T>)","url":"getComponentForType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"getComponentForType(Class<T>)","url":"getComponentForType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"getComponentRegistry()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"getComponentRegistry()"},{"p":"io.streamthoughts.azkarra.streams.config.internal","c":"InternalHttpServerConf","l":"getConf()"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getConfAsMap()"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getConfAsMap()"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getConfAsMap()"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getConfAsMap()"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getConfAsMap()"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getConfAsProperties()"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getConfAsProperties()"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getConfAsProperties()"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getConfAsProperties()"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getConfAsProperties()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsTopologyRequest","l":"getConfig()"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ContextGetHandler.ContextPayload","l":"getConfig()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"getConfiguration()"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"getConfiguration()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"getConfiguration()"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"getConfiguration()"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"getConfiguration()"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"getContext()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getContextConfig()"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getContextConfig()"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraAccount","l":"getCredentials()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AbstractAuthentication","l":"getCredentials()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Authentication","l":"getCredentials()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getDate(Object)","url":"getDate(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getDefaultKeySerde()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"getDescription()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsTopologyRequest","l":"getDescription()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health","l":"getDetails()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getDouble(Object)","url":"getDouble(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getDouble(String)","url":"getDouble(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getDouble(String)","url":"getDouble(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getDouble(String)","url":"getDouble(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getDouble(String)","url":"getDouble(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getDouble(String)","url":"getDouble(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsTopologyRequest","l":"getEnv()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"getEnvironmentForNameOrCreate(String)","url":"getEnvironmentForNameOrCreate(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"getEnvironmentForNameOrCreate(String)","url":"getEnvironmentForNameOrCreate(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.data","c":"ErrorMessage","l":"getErrorCode()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"ErrorResultSet","l":"getErrors()"},{"p":"io.streamthoughts.azkarra.http.data","c":"ErrorMessage","l":"getException()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"getException()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"GlobalResultSet","l":"getFailure()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"getFatalExceptions()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getFloat(Object)","url":"getFloat(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraVersion","l":"getGitBranch()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraVersion","l":"getGitCommitId()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph","l":"getGlobalStores()"},{"p":"io.streamthoughts.azkarra.http.health","c":"HealthIndicator","l":"getHealth()"},{"p":"io.streamthoughts.azkarra.http.health.internal","c":"StreamsHealthIndicator","l":"getHealth()"},{"p":"io.streamthoughts.examples.azkarra.healthcheck","c":"CustomHealthCheckExample.MyCustomerHealthCheck","l":"getHealth()"},{"p":"io.streamthoughts.azkarra.api.server","c":"ServerInfo","l":"getHost()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsStatus","l":"getId()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.GlobalStore","l":"getId()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SubTopologyGraph","l":"getId()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"getId()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getInt(Object)","url":"getInt(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getInt(String)","url":"getInt(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getInt(String)","url":"getInt(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getInt(String)","url":"getInt(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getInt(String)","url":"getInt(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getInt(String)","url":"getInt(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getKeyPassword()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getKeystoreLocation()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getKeystorePassword()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getKeystoreType()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"getLatest(Version...)","url":"getLatest(io.streamthoughts.azkarra.api.util.Version...)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"getLatestComponent(Class<T>, Conf)","url":"getLatestComponent(java.lang.Class,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"getLatestComponent(Class<T>, Conf)","url":"getLatestComponent(java.lang.Class,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"getLatestComponent(String, Conf)","url":"getLatestComponent(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"getLatestComponent(String, Conf)","url":"getLatestComponent(java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getList(Object)","url":"getList(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getLocalKeyValueStore(String)","url":"getLocalKeyValueStore(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getLocalServerInfo()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getLocalSessionStore(String)","url":"getLocalSessionStore(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getLocalStoreAccess(String, QueryableStoreType<T>)","url":"getLocalStoreAccess(java.lang.String,org.apache.kafka.streams.state.QueryableStoreType)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getLocalWindowStore(String)","url":"getLocalWindowStore(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"JAASAuthentication","l":"getLoginContext()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getLong(Object)","url":"getLong(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getLong(String)","url":"getLong(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getLong(String)","url":"getLong(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getLong(String)","url":"getLong(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getLong(String)","url":"getLong(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getLong(String)","url":"getLong(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"getMainApplicationClass()"},{"p":"io.streamthoughts.azkarra.http.data","c":"ErrorMessage","l":"getMessage()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer","l":"getMetadata()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"getMetadataForStoreAndKey(String, K, Serializer<K>)","url":"getMetadataForStoreAndKey(java.lang.String,K,org.apache.kafka.common.serialization.Serializer)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.AbstractNode","l":"getName()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node","l":"getName()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"getName()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsTopologyRequest","l":"getName()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health","l":"getName()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicRolePrincipal","l":"getName()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicUserPrincipal","l":"getName()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SubTopologyGraph","l":"getNodes()"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getOptionalBoolean(String)","url":"getOptionalBoolean(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getOptionalDouble(String)","url":"getOptionalDouble(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getOptionalInt(String)","url":"getOptionalInt(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getOptionalLong(String)","url":"getOptionalLong(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ExchangeHelper","l":"getOptionalQueryParam(HttpServerExchange, String)","url":"getOptionalQueryParam(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getOptionalString(String)","url":"getOptionalString(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"getOrThrow(Function<List<Error>, Throwable>)","url":"getOrThrow(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.http.data","c":"ErrorMessage","l":"getPath()"},{"p":"io.streamthoughts.azkarra.api.server","c":"ServerInfo","l":"getPort()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.AbstractNode","l":"getPredecessors()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node","l":"getPredecessors()"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraAccount","l":"getPrincipal()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AbstractAuthentication","l":"getPrincipal()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Authentication","l":"getPrincipal()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.GlobalStore","l":"getProcessor()"},{"p":"io.streamthoughts.azkarra.http","c":"ExchangeHelper","l":"getQueryParam(HttpServerExchange, String)","url":"getQueryParam(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.data","c":"QueryOptionsRequest","l":"getQueryTimeout()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"SuccessResultSet","l":"getRecords()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResult","l":"getResult()"},{"p":"io.streamthoughts.azkarra.http.data","c":"QueryOptionsRequest","l":"getRetries()"},{"p":"io.streamthoughts.azkarra.http.data","c":"QueryOptionsRequest","l":"getRetryBackoff()"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraAccount","l":"getRoles()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContext","l":"getSecurityMechanism()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UndertowAuthenticationContext","l":"getSecurityMechanism()"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"SecurityHandler","l":"getSecurityMechanism()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"AbstractResultSet","l":"getServer()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResult","l":"getServer()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getShort(Object)","url":"getShort(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"getSince()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.State","l":"getSince()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.GlobalStore","l":"getSource()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SSLContextFactory","l":"getSSLContext()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"SSLAuthenticationContext","l":"getSSLSession()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsStatus","l":"getState()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"getState()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.State","l":"getState()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResult","l":"getStatus()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health","l":"getStatus()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"GlobalResultSet","l":"getStore()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.ProcessorNode","l":"getStores()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"OptimizedTopologyProvider","l":"getStreamBuilder()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getStreamsById(String)","url":"getStreamsById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getStreamsById(String)","url":"getStreamsById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getStreamsConfigById(String)","url":"getStreamsConfigById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getStreamsConfigById(String)","url":"getStreamsConfigById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getStreamsInstancesById(String)","url":"getStreamsInstancesById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getStreamsInstancesById(String)","url":"getStreamsInstancesById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getStreamsMetricsById(String, Predicate<Tuple<String, Metric>>)","url":"getStreamsMetricsById(java.lang.String,java.util.function.Predicate)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getStreamsMetricsById(String, Predicate<Tuple<String, Metric>>)","url":"getStreamsMetricsById(java.lang.String,java.util.function.Predicate)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getStreamsMetricsById(String)","url":"getStreamsMetricsById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getStreamsMetricsById(String)","url":"getStreamsMetricsById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getStreamsStatusById(String)","url":"getStreamsStatusById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getStreamsStatusById(String)","url":"getStreamsStatusById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getStreamsTopologyById(String)","url":"getStreamsTopologyById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getStreamsTopologyById(String)","url":"getStreamsTopologyById(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"getString(Object)","url":"getString(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getString(String)","url":"getString(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getString(String)","url":"getString(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getString(String)","url":"getString(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getString(String)","url":"getString(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getString(String)","url":"getString(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getStringList(String)","url":"getStringList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getStringList(String)","url":"getStringList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getStringList(String)","url":"getStringList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getStringList(String)","url":"getStringList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getStringList(String)","url":"getStringList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getSubConf(String)","url":"getSubConf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getSubConf(String)","url":"getSubConf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getSubConf(String)","url":"getSubConf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getSubConf(String)","url":"getSubConf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getSubConf(String)","url":"getSubConf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"getSubConfList(String)","url":"getSubConfList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"getSubConfList(String)","url":"getSubConfList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"getSubConfList(String)","url":"getSubConfList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"getSubConfList(String)","url":"getSubConfList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"getSubConfList(String)","url":"getSubConfList(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph","l":"getSubTopologies()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"GlobalResultSet","l":"getSuccess()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.AbstractNode","l":"getSuccessors()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node","l":"getSuccessors()"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"getSuperTypes(Class<?>)","url":"getSuperTypes(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsStatus","l":"getThreads()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"getThrowable()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"getThrowable()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"getThrowable()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"getThrowable()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResult","l":"getTook()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SinkNode","l":"getTopic()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SourceNode","l":"getTopics()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer","l":"getTopology()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"getTopology(String)","url":"getTopology(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"getTopology(String)","url":"getTopology(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"getTopologyProviders()"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"getTopologyProviders()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"GlobalResultSet","l":"getTotal()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"SuccessResultSet","l":"getTotal()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SSLContextFactory","l":"getTrustManager()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getTrustStoreLocation()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getTruststorePassword()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getTruststoreType()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory","l":"getType()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory.SimpleFactory","l":"getType()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"getType()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.AbstractNode","l":"getType()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node","l":"getType()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"GlobalResultSet","l":"getType()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsTopologyRequest","l":"getType()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"BasicComponentFactory","l":"getType()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Authentication","l":"getUserDetails()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UsernamePasswordAuthentication","l":"getUserDetails()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"getUserIdentityManager()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"InMemoryUserIdentityManager","l":"getUsers()"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryParams","l":"getValue(String)","url":"getValue(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraVersion","l":"getVersion()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"getVersion()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsTopologyRequest","l":"getVersion()"},{"p":"io.streamthoughts.examples.azkarra","c":"Version","l":"getVersion()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"getVersionedComponent(String, String, Conf)","url":"getVersionedComponent(java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"getVersionedComponent(String, String, Conf)","url":"getVersionedComponent(java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"X509CertificateCredentials","l":"getX509Certificate()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"GlobalResultSet","l":"GlobalResultSet(String, String, List<ErrorResultSet>, List<SuccessResultSet<K, V>>)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.List,java.util.List)"},{"p":"io.streamthoughts.azkarra.api.model.predicate","c":"GroupMetricFilter","l":"GroupMetricFilter(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"DefaultAuthenticationCallbackHandler","l":"handle(Callback[])","url":"handle(javax.security.auth.callback.Callback[])"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandler","l":"handle(ProcessorContext, ConsumerRecord<byte[], byte[]>, Exception)","url":"handle(org.apache.kafka.streams.processor.ProcessorContext,org.apache.kafka.clients.consumer.ConsumerRecord,java.lang.Exception)"},{"p":"io.streamthoughts.azkarra.http.error","c":"ExceptionDefaultResponseListener","l":"handleDefaultResponse(HttpServerExchange)","url":"handleDefaultResponse(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiApplicationsRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiContextRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiDefaultRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiEnvironmentRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiHealthRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiInfoRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiStreamsRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiTopologyRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiVersionRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"WebUIHttpRoutes","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.spi","c":"RoutingHandlerProvider","l":"handler(AzkarraStreamsService)","url":"handler(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ApplicationGetInstancesHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ApplicationGetTopologyHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ApplicationQueryStoreHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsDeleteHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetConfigHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetDetailsHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetMetricsHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetStatusHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsRestartHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsStopHandler","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"WithApplication","l":"handleRequest(HttpServerExchange, String)","url":"handleRequest(io.undertow.server.HttpServerExchange,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.error","c":"ExceptionDefaultHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"ContextGetHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"EnvironmentGetListHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"EnvironmentPostHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"HeadlessHttpHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetListHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsPostHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"TopologyListHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"WithApplication","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiHealthRoutes","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiInfoRoutes","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiVersionRoutes","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"AuthenticationContextHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"SecurityHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"XMLHttpRequestAwareAuthCallHandler","l":"handleRequest(HttpServerExchange)","url":"handleRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"Error","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.model","c":"MetricGroup","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetRangeQuery","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyedLocalStoreQuery","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.server","c":"ServerInfo","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"ApplicationId","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopicPartitions","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraAccount","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicRolePrincipal","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicUserPrincipal","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"DigestPasswordCredentials","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"RoleGrantedAuthority","l":"hashCode()"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"hasPath(String)","url":"hasPath(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"hasPath(String)","url":"hasPath(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"hasPath(String)","url":"hasPath(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"hasPath(String)","url":"hasPath(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"hasPath(String)","url":"hasPath(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"HeadlessHttpHandler","l":"HeadlessHttpHandler(boolean, HttpHandler)","url":"%3Cinit%3E(boolean,io.undertow.server.HttpHandler)"},{"p":"io.streamthoughts.azkarra.http.health","c":"HealthAggregator","l":"HealthAggregator()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.health","c":"HealthAggregator","l":"HealthAggregator(StatusAggregator)","url":"%3Cinit%3E(io.streamthoughts.azkarra.http.health.StatusAggregator)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"host()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"hostAndPort()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Network","l":"HOSTNAME"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"HTTP_AUTH_PRINCIPAL_BUILDER_CLASS_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"HTTP_AUTH_USER_IDENTITY_MANAGER_CLASS_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"HTTP_AUTHORIZATION_MANAGER_CLASS_CONFIG"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"HTTP_ENABLE_UI"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"HTTP_HEADLESS_CONFIG"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"HTTP_LISTENER_LISTER_CONFIG"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"HTTP_PORT_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"HTTP_RESTRICTED_ROLES_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"HttpResource","l":"httpMethod()"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryBuilder","l":"HttpRemoteQueryBuilder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryClient","l":"HttpRemoteQueryClient(OkHttpClient, QueryURLBuilder)","url":"%3Cinit%3E(okhttp3.OkHttpClient,io.streamthoughts.azkarra.http.query.QueryURLBuilder)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"HttpResource","l":"HttpResource(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"HttpServerConf(HttpServerConf)","url":"%3Cinit%3E(io.streamthoughts.azkarra.streams.config.HttpServerConf)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"HttpServerConf(String, Integer, Map<String, Object>, Conf)","url":"%3Cinit%3E(java.lang.String,java.lang.Integer,java.util.Map,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"id()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Retry","l":"ifExceptionOfType(Class<? extends Exception>)","url":"ifExceptionOfType(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"immediatly()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"incrementalVersion()"},{"p":"io.streamthoughts.azkarra.api.server","c":"EmbeddedHttpServer","l":"info()"},{"p":"io.streamthoughts.azkarra.http","c":"UndertowEmbeddedServer","l":"info()"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"PropertiesFileLoginModule","l":"initialize(Subject, CallbackHandler, Map<String, ?>, Map<String, ?>)","url":"initialize(javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler,java.util.Map,java.util.Map)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"InMemoryUserIdentityManager","l":"InMemoryUserIdentityManager()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.runtime.streams","c":"DefaultApplicationIdBuilder","l":"INTERNAL_ENV_NAME_PREFIX"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"InternalExecuted","l":"InternalExecuted()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"InternalExecuted","l":"InternalExecuted(Executed)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.streams.config.internal","c":"InternalHttpServerConf","l":"InternalHttpServerConf(HttpServerConf)","url":"%3Cinit%3E(io.streamthoughts.azkarra.streams.config.HttpServerConf)"},{"p":"io.streamthoughts.azkarra.streams.config.internal","c":"InternalHttpServerConf","l":"InternalHttpServerConf(String, int)","url":"%3Cinit%3E(java.lang.String,int)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"INVALID"},{"p":"io.streamthoughts.azkarra.api.errors","c":"InvalidConfException","l":"InvalidConfException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"InvalidConfException","l":"InvalidConfException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.error","c":"InvalidHttpQueryParamException","l":"InvalidHttpQueryParamException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.error","c":"InvalidStateStoreQueryException","l":"InvalidStateStoreQueryException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.error","c":"InvalidStateStoreQueryException","l":"InvalidStateStoreQueryException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"isAnnotationOfType(Annotation, Class<?>)","url":"isAnnotationOfType(java.lang.annotation.Annotation,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AbstractAuthentication","l":"isAuthenticated()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Authentication","l":"isAuthenticated()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"isBasicAuthenticationSilent()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"isCloseable()"},{"p":"io.streamthoughts.azkarra.api.config","c":"Configurable","l":"isConfigurable(Class)","url":"isConfigurable(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"isDefault()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"isFailure()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"isFailure()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"isFailure()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"isFailure()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"isHeadless()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"isHostnameVerificationIgnored()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"PreparedQuery","l":"isKeyedQuery()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either","l":"isLeft()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.Left","l":"isLeft()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.Right","l":"isLeft()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"isLocal()"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"isNullKey()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Utils","l":"isNullOrEmpty(String)","url":"isNullOrEmpty(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.util","c":"Utils","l":"isNumber(String)","url":"isNumber(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"isRegistered(String)","url":"isRegistered(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"isRegistered(String)","url":"isRegistered(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"AbstractResultSet","l":"isRemote()"},{"p":"io.streamthoughts.azkarra.http.data","c":"QueryOptionsRequest","l":"isRemoteAccessAllowed()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"isRestAuthenticationEnable()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either","l":"isRight()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.Left","l":"isRight()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.Right","l":"isRight()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory","l":"isSingleton()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory.SimpleFactory","l":"isSingleton()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"BasicComponentFactory","l":"isSingleton()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"isSslEnable()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"isSuccess()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"isSuccess()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"isSuccess()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"isSuccess()"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"isSuperTypesAnnotatedWith(Class<?>, Class<A>)","url":"isSuperTypesAnnotatedWith(java.lang.Class,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResult","l":"isTimeout()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"isValid()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"isVersioned()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"JAASAuthentication","l":"JAASAuthentication(Principal, PasswordCredentials, LoginContext)","url":"%3Cinit%3E(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.PasswordCredentials,javax.security.auth.login.LoginContext)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"JAASAuthentication","l":"JAASAuthentication(Principal, PasswordCredentials)","url":"%3Cinit%3E(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.PasswordCredentials)"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryClient","l":"JSON"},{"p":"io.streamthoughts.azkarra.http.query","c":"JsonQuerySerde","l":"JsonQuerySerde()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"JsonSerdes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.prometheus","c":"KafkaStreamsMetricsCollector","l":"KafkaStreamsMetricsCollector(AzkarraStreamsService, Predicate<Tuple<String, Metric>>, String...)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService,java.util.function.Predicate,java.lang.String...)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"KEY_VALUE"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"key()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyedLocalStoreQuery","l":"key()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"PreparedQuery","l":"key()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyedLocalStoreQuery","l":"keySerializer()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"PreparedQuery","l":"keySerializer()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"QueryBuilder","l":"keyValue()"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"KV(K, V)","url":"%3Cinit%3E(K,V)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either","l":"left()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"left()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either","l":"left(L)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"listener"},{"p":"io.streamthoughts.azkarra.streams.autoconfigure","c":"AutoConfigure","l":"load(AzkarraApplication)","url":"load(io.streamthoughts.azkarra.streams.AzkarraApplication)"},{"p":"io.streamthoughts.azkarra.streams.context","c":"AzkarraContextLoader","l":"load(AzkarraContext, ApplicationConfig)","url":"load(io.streamthoughts.azkarra.api.AzkarraContext,io.streamthoughts.azkarra.streams.context.internal.ApplicationConfig)"},{"p":"io.streamthoughts.azkarra.streams.context","c":"AzkarraContextLoader","l":"load(AzkarraContext, Conf)","url":"load(io.streamthoughts.azkarra.api.AzkarraContext,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"LocalAzkarraStreamsService(AzkarraContext, RemoteQueryClient)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraContext,io.streamthoughts.azkarra.api.query.RemoteQueryClient)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"locally()"},{"p":"io.streamthoughts.azkarra.api.query","c":"LocalStoreAccessor","l":"LocalStoreAccessor(LocalStoreAccessor.StoreSupplier<T>)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.query.LocalStoreAccessor.StoreSupplier)"},{"p":"io.streamthoughts.azkarra.api.banner","c":"Banner.Mode","l":"LOG"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"LOG"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"PropertiesFileLoginModule","l":"login()"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"PropertiesFileLoginModule","l":"logout()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"StreamsApplication","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"io.streamthoughts.examples.azkarra.healthcheck","c":"CustomHealthCheckExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"io.streamthoughts.examples.azkarra.noannotation","c":"StreamsApplication","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"io.streamthoughts.examples.azkarra.security","c":"BasicAuthenticationExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"io.streamthoughts.examples.azkarra.security","c":"SSLAuthenticationExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"majorVersion()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory","l":"make()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory.SimpleFactory","l":"make()"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"BasicComponentFactory","l":"make()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ComplexWordCountTopologyModule","l":"make()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptorFactory","l":"make(Class<? extends T>, String)","url":"make(java.lang.Class,java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"TopologyDescriptorFactory","l":"make(Class<? extends TopologyProvider>, String)","url":"make(java.lang.Class,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsFactory","l":"make(KafkaStreamsContainer)","url":"make(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer)"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"SecurityHandlerFactory","l":"make(SecurityConfig, HttpHandler)","url":"make(io.streamthoughts.azkarra.http.security.SecurityConfig,io.undertow.server.HttpHandler)"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"TopologyFactory","l":"make(TopologyProvider, Conf, Executed)","url":"make(io.streamthoughts.azkarra.api.streams.TopologyProvider,io.streamthoughts.azkarra.api.config.Conf,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Reader","l":"map(Function<? super B, ? extends BB>)","url":"map(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.LeftProjection","l":"map(Function<? super L, ? extends LL>)","url":"map(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.RightProjection","l":"map(Function<? super R, ? extends RR>)","url":"map(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"map(Function<? super V, ? extends B>)","url":"map(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"map(Function<? super V, ? extends B>)","url":"map(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"map(Function<? super V, ? extends B>)","url":"map(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"map(Function<? super V, ? extends B>)","url":"map(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"mapKey(Function<L, LL>)","url":"mapKey(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"mapValue(Function<R, RR>)","url":"mapValue(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Configurable","l":"mayConfigure(Object, Conf)","url":"mayConfigure(java.lang.Object,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials.Type","l":"MD5"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"ExceptionHeader","l":"MESSAGE"},{"p":"io.streamthoughts.azkarra.api.errors","c":"Error","l":"message()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryError","l":"message()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"Metric(String, String, Map<String, String>, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.Map,java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.model","c":"MetricGroup","l":"MetricGroup(String, Set<Metric>)","url":"%3Cinit%3E(java.lang.String,java.util.Set)"},{"p":"io.streamthoughts.azkarra.http.error","c":"MetricNotFoundException","l":"MetricNotFoundException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.model","c":"MetricGroup","l":"metrics()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"metrics()"},{"p":"io.streamthoughts.azkarra.api.time","c":"SystemTime","l":"milliseconds()"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"milliseconds()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"minorVersion()"},{"p":"io.streamthoughts.azkarra.api.errors","c":"MissingConfException","l":"MissingConfException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.examples.azkarra.healthcheck","c":"CustomHealthCheckExample.MyCustomerHealthCheck","l":"MyCustomerHealthCheck()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"name"},{"p":"io.streamthoughts.azkarra.http.handler","c":"EnvironmentPostHandler.EnvironmentPayload","l":"name"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"name()"},{"p":"io.streamthoughts.azkarra.api.annotations","c":"DefaultStreamsConfig","l":"name()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"name()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"name()"},{"p":"io.streamthoughts.azkarra.api.model","c":"MetricGroup","l":"name()"},{"p":"io.streamthoughts.azkarra.api.providers","c":"TopologyDescriptor","l":"name()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopicPartitions","l":"name()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"name()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UserDetails","l":"name()"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"name()"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"InternalExecuted","l":"name()"},{"p":"io.streamthoughts.azkarra.streams.autoconfigure.annotations","c":"EnableAutoConfig","l":"name()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig","l":"name()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"name()"},{"p":"io.streamthoughts.azkarra.api.model.predicate","c":"NameMetricFilter","l":"NameMetricFilter(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"InternalExecuted","l":"nameOrElseGet(String)","url":"nameOrElseGet(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.time","c":"SystemTime","l":"nanoseconds()"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"nanoseconds()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Network","l":"Network()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.streams.admin","c":"AdminClientUtils","l":"newAdminClient(Conf)","url":"newAdminClient(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"newBuilder()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamContainerBuilder","l":"newBuilder()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer","l":"newBuilder()"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"newBuilder()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"newBuilder()"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"BannerPrinterBuilder","l":"newBuilder()"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"newConf()"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"newConf(Conf)","url":"newConf(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.util","c":"ClassUtils","l":"newInstance(Class<T>)","url":"newInstance(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"SecurityHandler","l":"next"},{"p":"io.streamthoughts.azkarra.api.banner","c":"BannerPrinter","l":"NO_OP"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"NO_RESULT"},{"p":"io.streamthoughts.azkarra.api.model.predicate","c":"NonNullMetricFilter","l":"NonNullMetricFilter()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.components","c":"NoSuchComponentException","l":"NoSuchComponentException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"NOT_CREATED"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"NOT_RUNNING"},{"p":"io.streamthoughts.azkarra.api.errors","c":"NotFoundException","l":"NotFoundException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.components","c":"NoUniqueComponentException","l":"NoUniqueComponentException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"nullableKey()"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"nullableValue()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Reader","l":"of(Function<S, A>)","url":"of(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"of(K, V)","url":"of(K,V)"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"of(KeyValue<K, V>)","url":"of(org.apache.kafka.streams.KeyValue)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"of(L, R)","url":"of(L,R)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"of(Map.Entry<L, R>)","url":"of(java.util.Map.Entry)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"LocalStoreQueryBuilder.MissingRequiredKeyError","l":"of(String)","url":"of(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"of(T)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryError","l":"of(Throwable)","url":"of(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.banner","c":"Banner.Mode","l":"OFF"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateRestoreListener","l":"onBatchRestored(TopicPartition, String, long, long)","url":"onBatchRestored(org.apache.kafka.common.TopicPartition,java.lang.String,long,long)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateListener","l":"onChange(KafkaStreams.State, KafkaStreams.State)","url":"onChange(org.apache.kafka.streams.KafkaStreams.State,org.apache.kafka.streams.KafkaStreams.State)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContextListener","l":"onContextStart(AzkarraContext)","url":"onContextStart(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContextListener","l":"onContextStop(AzkarraContext)","url":"onContextStop(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateRestoreListener","l":"onRestoreEnd(TopicPartition, String, long)","url":"onRestoreEnd(org.apache.kafka.common.TopicPartition,java.lang.String,long)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeStateRestoreListener","l":"onRestoreStart(TopicPartition, String, long, long)","url":"onRestoreStart(org.apache.kafka.common.TopicPartition,java.lang.String,long,long)"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"operation()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"operation(StoreOperation)","url":"operation(io.streamthoughts.azkarra.api.query.StoreOperation)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"QueryOperationBuilder","l":"operation(StoreOperation)","url":"operation(io.streamthoughts.azkarra.api.query.StoreOperation)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionQueryBuilder","l":"operation(StoreOperation)","url":"operation(io.streamthoughts.azkarra.api.query.StoreOperation)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"operation(StoreOperation)","url":"operation(io.streamthoughts.azkarra.api.query.StoreOperation)"},{"p":"io.streamthoughts.azkarra.api.query","c":"LocalStoreQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueCountQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetAllQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetRangeQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionFetchKeyRangeQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionFetchQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchAllQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchKeyRangeQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchTimeRangeQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowGetAllQuery","l":"operationType()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"OptimizedTopologyProvider","l":"OptimizedTopologyProvider()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"originals"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryParams","l":"originals()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"DeadLetterTopicExceptionHandlerConfig","l":"outputTopic()"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"overrides"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"parameters()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"parse(String)","url":"parse(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"parse(String)","url":"parse(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"parse(String)","url":"parse(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"ParsingConfException","l":"ParsingConfException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.errors","c":"ParsingConfException","l":"ParsingConfException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"PARTIAL"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopicPartitions","l":"partitions()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials","l":"password"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials","l":"password()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials","l":"PasswordCredentials(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiContextRoutes","l":"PATH"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiEnvironmentRoutes","l":"PATH"},{"p":"io.streamthoughts.azkarra.http","c":"APIVersions","l":"PATH_V1"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"HttpResource","l":"path()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"PENDING_SHUTDOWN"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"PENDING_SHUTDOWN"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PlainPasswordCredentials","l":"PlainPasswordCredentials(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"port"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"port()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials.Type","l":"prefix()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"Query","l":"prepare()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"Query","l":"prepare(QueryParams)","url":"prepare(io.streamthoughts.azkarra.api.query.QueryParams)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"prettyName()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"prettyName()"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationContext","l":"principal()"},{"p":"io.streamthoughts.azkarra.api.banner","c":"BannerPrinter","l":"print(Banner)","url":"print(io.streamthoughts.azkarra.api.banner.Banner)"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"DefaultBannerPrinter","l":"print(Banner)","url":"print(io.streamthoughts.azkarra.api.banner.Banner)"},{"p":"io.streamthoughts.azkarra.api.banner","c":"Banner","l":"print(PrintStream)","url":"print(java.io.PrintStream)"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"AzkarraBanner","l":"print(PrintStream)","url":"print(java.io.PrintStream)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node.Type","l":"PROCESSOR"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.ProcessorNodeBuilder","l":"ProcessorNodeBuilder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"PropertiesFileLoginModule","l":"PropertiesFileLoginModule()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PropertiesFileUsersIdentityManager","l":"PropertiesFileUsersIdentityManager(String, boolean)","url":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory","l":"prototypeOf(T)"},{"p":"io.streamthoughts.azkarra.api.util","c":"Utils","l":"pruneSuffix(String, String)","url":"pruneSuffix(java.lang.String,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"qualifier()"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"Queried(int, Duration, Duration, boolean)","url":"%3Cinit%3E(int,java.time.Duration,java.time.Duration,boolean)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"WithApplication","l":"QUERY_PARAM_ID"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"QUERY_PARAM_KEY"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionQueryBuilder","l":"QUERY_PARAM_KEY"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"QUERY_PARAM_KEY"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"QUERY_PARAM_KEY_FROM"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionQueryBuilder","l":"QUERY_PARAM_KEY_FROM"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"QUERY_PARAM_KEY_FROM"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"QUERY_PARAM_KEY_TO"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionQueryBuilder","l":"QUERY_PARAM_KEY_TO"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"QUERY_PARAM_KEY_TO"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"QUERY_PARAM_TIME"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"QUERY_PARAM_TIME_FROM"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowQueryBuilder","l":"QUERY_PARAM_TIME_TO"},{"p":"io.streamthoughts.azkarra.api.query","c":"DistributedQuery","l":"query(KafkaStreamsContainer, Queried)","url":"query(io.streamthoughts.azkarra.api.streams.KafkaStreamsContainer,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query","c":"RemoteQueryClient","l":"query(StreamsServerInfo, QueryInfo, Queried)","url":"query(io.streamthoughts.azkarra.api.streams.StreamsServerInfo,io.streamthoughts.azkarra.api.query.QueryInfo,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryClient","l":"query(StreamsServerInfo, QueryInfo, Queried)","url":"query(io.streamthoughts.azkarra.api.streams.StreamsServerInfo,io.streamthoughts.azkarra.api.query.QueryInfo,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"query(String, Query<K, V>, QueryParams, Queried)","url":"query(java.lang.String,io.streamthoughts.azkarra.api.query.internal.Query,io.streamthoughts.azkarra.api.query.QueryParams,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"query(String, Query<K, V>, QueryParams, Queried)","url":"query(java.lang.String,io.streamthoughts.azkarra.api.query.internal.Query,io.streamthoughts.azkarra.api.query.QueryParams,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"QueryBuilder","l":"QueryBuilder(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryError","l":"QueryError(Error)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.errors.Error)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryError","l":"QueryError(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"QueryInfo(String, StoreType, StoreOperation, QueryParams)","url":"%3Cinit%3E(java.lang.String,io.streamthoughts.azkarra.api.query.StoreType,io.streamthoughts.azkarra.api.query.StoreOperation,io.streamthoughts.azkarra.api.query.QueryParams)"},{"p":"io.streamthoughts.azkarra.http.data","c":"QueryOptionsRequest","l":"QueryOptionsRequest(Integer, Long, Long, Boolean)","url":"%3Cinit%3E(java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Boolean)"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryParams","l":"QueryParams(Map<String, Object>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"QueryResultBuilder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"queryTimeout()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"RANGE"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueQueryBuilder","l":"range()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig","l":"read(Conf)","url":"read(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig.Reader","l":"read(Conf)","url":"read(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig","l":"read(Conf)","url":"read(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"read(Conf)","url":"read(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig.Reader","l":"read(Conf)","url":"read(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"ApplicationConfig.Reader","l":"Reader()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig.Reader","l":"Reader()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig.Reader","l":"Reader()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http","c":"ExchangeHelper","l":"readJsonRequest(HttpServerExchange, Class<T>)","url":"readJsonRequest(io.undertow.server.HttpServerExchange,java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http","c":"ExchangeHelper","l":"readJsonRequest(HttpServerExchange)","url":"readJsonRequest(io.undertow.server.HttpServerExchange)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"REBALANCING"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"REBALANCING"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"recover(Function<? super Throwable, Try<V>>)","url":"recover(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"recover(Function<? super Throwable, Try<V>>)","url":"recover(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"recover(Function<? super Throwable, Try<V>>)","url":"recover(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"recover(Function<? super Throwable, Try<V>>)","url":"recover(java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"RECOVERING"},{"p":"io.streamthoughts.azkarra.runtime.util","c":"ShutdownHook","l":"register(ShutdownHook.Hook)","url":"register(io.streamthoughts.azkarra.runtime.util.ShutdownHook.Hook)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentClassReader","l":"registerComponent(Class<T>, ComponentRegistry)","url":"registerComponent(java.lang.Class,io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultProviderClassReader","l":"registerComponent(Class<T>, ComponentRegistry)","url":"registerComponent(java.lang.Class,io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"registerComponent(ComponentDescriptor<T>, ComponentFactory<T>)","url":"registerComponent(io.streamthoughts.azkarra.api.components.ComponentDescriptor,io.streamthoughts.azkarra.api.components.ComponentFactory)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"registerComponent(ComponentDescriptor<T>, ComponentFactory<T>)","url":"registerComponent(io.streamthoughts.azkarra.api.components.ComponentDescriptor,io.streamthoughts.azkarra.api.components.ComponentFactory)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"registerComponent(ComponentDescriptor<T>)","url":"registerComponent(io.streamthoughts.azkarra.api.components.ComponentDescriptor)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"registerComponent(ComponentDescriptor<T>)","url":"registerComponent(io.streamthoughts.azkarra.api.components.ComponentDescriptor)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentClassReader","l":"registerComponent(ComponentFactory<T>, ComponentRegistry)","url":"registerComponent(io.streamthoughts.azkarra.api.components.ComponentFactory,io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultProviderClassReader","l":"registerComponent(ComponentFactory<T>, ComponentRegistry)","url":"registerComponent(io.streamthoughts.azkarra.api.components.ComponentFactory,io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentClassReader","l":"registerComponent(String, ComponentRegistry)","url":"registerComponent(java.lang.String,io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultProviderClassReader","l":"registerComponent(String, ComponentRegistry)","url":"registerComponent(java.lang.String,io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"remoteAccessAllowed()"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"remove(ApplicationId)","url":"remove(io.streamthoughts.azkarra.api.streams.ApplicationId)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"remove(ApplicationId)","url":"remove(io.streamthoughts.azkarra.api.streams.ApplicationId)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationContext","l":"resource()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"REST_AUTHENTICATION_BASIC_SILENT_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"REST_AUTHENTICATION_MECHANISM_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"REST_AUTHENTICATION_REALM_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"REST_AUTHENTICATION_ROLES_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"REST_AUTHENTICATION_USERS_CONFIG"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"restart()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"restartStreams(String)","url":"restartStreams(java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"restartStreams(String)","url":"restartStreams(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"retriable(CheckedSupplier<V, E>, Retry)","url":"retriable(io.streamthoughts.azkarra.api.monad.CheckedSupplier,io.streamthoughts.azkarra.api.monad.Retry)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"retries()"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"retryBackoff()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either","l":"right()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"right()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either","l":"right(R)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"ROCKS_DB_LOG_DIR_CONFIG"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"ROCKS_DB_LOG_LEVEL_CONFIG"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"ROCKS_DB_LOG_MAX_FILE_SIZE_CONFIG"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"ROCKS_DB_MAX_WRITE_BUFFER_NUMBER_CONFIG"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"ROCKS_DB_STATS_DUMP_PERIOD_SEC_CONFIG"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"ROCKS_DB_STATS_ENABLE_CONFIG"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"ROCKS_DB_WRITE_BUFFER_SIZE_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"RoleGrantedAuthority","l":"RoleGrantedAuthority(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PropertiesFileUsersIdentityManager.PropertiesFileLoaderTask","l":"run()"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"run()"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"run(Class<?>, String[])","url":"run(java.lang.Class,java.lang.String[])"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"run(Class<?>[], String[])","url":"run(java.lang.Class[],java.lang.String[])"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"run(String[])","url":"run(java.lang.String[])"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"RUNNING"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"RUNNING"},{"p":"io.streamthoughts.azkarra.streams.components","c":"ClasspathComponentScanner","l":"scan()"},{"p":"io.streamthoughts.azkarra.streams.components","c":"ClasspathComponentScanner","l":"scan(Package)","url":"scan(java.lang.Package)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfException","l":"SecurityConfException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfException","l":"SecurityConfException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfException","l":"SecurityConfException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SecurityConfig(Conf)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"SecurityHandlerFactory","l":"SecurityHandlerFactory(AzkarraContext)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationContext","l":"securityMechanism()"},{"p":"io.streamthoughts.azkarra.http.error","c":"ExceptionDefaultHandler","l":"sendErrorMessage(HttpServerExchange, Throwable)","url":"sendErrorMessage(io.undertow.server.HttpServerExchange,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http","c":"ExchangeHelper","l":"sendJsonResponse(HttpServerExchange, Object)","url":"sendJsonResponse(io.undertow.server.HttpServerExchange,java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http","c":"ExchangeHelper","l":"sendJsonResponseWithCode(HttpServerExchange, Object, int)","url":"sendJsonResponseWithCode(io.undertow.server.HttpServerExchange,java.lang.Object,int)"},{"p":"io.streamthoughts.azkarra.http.error","c":"SerializationException","l":"SerializationException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"ConfSerializer","l":"serialize(Conf, JsonGenerator, SerializerProvider)","url":"serialize(io.streamthoughts.azkarra.api.config.Conf,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"GenericRecordSerializer","l":"serialize(GenericRecord, JsonGenerator, SerializerProvider)","url":"serialize(org.apache.avro.generic.GenericRecord,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TimestampSerializer","l":"serialize(Long, JsonGenerator, SerializerProvider)","url":"serialize(java.lang.Long,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.http.json","c":"JsonSerdes","l":"serialize(Object)","url":"serialize(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.query","c":"JsonQuerySerde","l":"serialize(QueryInfo, Queried)","url":"serialize(io.streamthoughts.azkarra.api.query.QueryInfo,io.streamthoughts.azkarra.api.query.Queried)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TaskMetadataSerializer","l":"serialize(TaskMetadata, JsonGenerator, SerializerProvider)","url":"serialize(org.apache.kafka.streams.processor.TaskMetadata,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"ThreadMetadataSerializer","l":"serialize(ThreadMetadata, JsonGenerator, SerializerProvider)","url":"serialize(org.apache.kafka.streams.processor.ThreadMetadata,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TopicPartitionSerializer","l":"serialize(TopicPartition, JsonGenerator, SerializerProvider)","url":"serialize(org.apache.kafka.common.TopicPartition,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TopologyDescriptorSerializer","l":"serialize(TopologyDescriptor, JsonGenerator, SerializerProvider)","url":"serialize(io.streamthoughts.azkarra.api.providers.TopologyDescriptor,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"WindowedSerializer","l":"serialize(Windowed, JsonGenerator, SerializerProvider)","url":"serialize(org.apache.kafka.streams.kstream.Windowed,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"AbstractResultSet","l":"server"},{"p":"io.streamthoughts.azkarra.api.server","c":"ServerInfo","l":"ServerInfo(String, int)","url":"%3Cinit%3E(java.lang.String,int)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"SESSION"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"QueryBuilder","l":"session()"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"setApplicationIdBuilder(Supplier<ApplicationIdBuilder>)","url":"setApplicationIdBuilder(java.util.function.Supplier)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"setApplicationIdBuilder(Supplier<ApplicationIdBuilder>)","url":"setApplicationIdBuilder(java.util.function.Supplier)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AbstractAuthentication","l":"setAuthenticated(boolean)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Authentication","l":"setAuthenticated(boolean)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContext","l":"setAuthentication(Authentication)","url":"setAuthentication(io.streamthoughts.azkarra.http.security.auth.Authentication)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UndertowAuthenticationContext","l":"setAuthentication(Authentication)","url":"setAuthentication(io.streamthoughts.azkarra.http.security.auth.Authentication)"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"DefaultAuthenticationCallbackHandler","l":"setAuthentication(Authentication)","url":"setAuthentication(io.streamthoughts.azkarra.http.security.auth.Authentication)"},{"p":"io.streamthoughts.azkarra.http.security.jaas.spi","c":"AuthenticationCallback","l":"setAuthentication(T)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"AuthenticationContextHolder","l":"setAuthenticationContext(AuthenticationContext)","url":"setAuthenticationContext(io.streamthoughts.azkarra.http.security.auth.AuthenticationContext)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setAuthenticationMethod(String)","url":"setAuthenticationMethod(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setAuthenticationRealm(String)","url":"setAuthenticationRealm(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setAuthenticationRestricted(String)","url":"setAuthenticationRestricted(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setAuthenticationRoles(String)","url":"setAuthenticationRoles(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setAuthenticationUsers(String)","url":"setAuthenticationUsers(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setAutoStart(boolean, String)","url":"setAutoStart(boolean,java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setAutoStart(boolean)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContextAware","l":"setAzkarraContext(AzkarraContext)","url":"setAzkarraContext(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.http.health.internal","c":"StreamsHealthIndicator","l":"setAzkarraContext(AzkarraContext)","url":"setAzkarraContext(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.http.routes","c":"ApiHealthRoutes","l":"setAzkarraContext(AzkarraContext)","url":"setAzkarraContext(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"setAzkarraContext(AzkarraContext)","url":"setAzkarraContext(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraIdentityManager","l":"setAzkarraPrincipalBuilder(AzkarraPrincipalBuilder)","url":"setAzkarraPrincipalBuilder(io.streamthoughts.azkarra.http.security.auth.AzkarraPrincipalBuilder)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setBanner(Banner)","url":"setBanner(io.streamthoughts.azkarra.api.banner.Banner)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setBannerMode(Banner.Mode)","url":"setBannerMode(io.streamthoughts.azkarra.api.banner.Banner.Mode)"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryBuilder","l":"setBasePath(String)","url":"setBasePath(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setBasicSilentAuthentication(boolean)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistry","l":"setComponentAliasesGenerator(ComponentAliasesGenerator)","url":"setComponentAliasesGenerator(io.streamthoughts.azkarra.api.components.ComponentAliasesGenerator)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"DefaultComponentRegistry","l":"setComponentAliasesGenerator(ComponentAliasesGenerator)","url":"setComponentAliasesGenerator(io.streamthoughts.azkarra.api.components.ComponentAliasesGenerator)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"setComponentClassReader(ComponentClassReader)","url":"setComponentClassReader(io.streamthoughts.azkarra.api.components.ComponentClassReader)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"setComponentClassReader(ComponentClassReader)","url":"setComponentClassReader(io.streamthoughts.azkarra.api.components.ComponentClassReader)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"setComponentRegistry(ComponentRegistry)","url":"setComponentRegistry(io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"setComponentRegistry(ComponentRegistry)","url":"setComponentRegistry(io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.api.streams.rocksdb","c":"DefaultRocksDBConfigSetter","l":"setConfig(String, Options, Map<String, Object>)","url":"setConfig(java.lang.String,org.rocksdb.Options,java.util.Map)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"setConfiguration(Conf)","url":"setConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"setConfiguration(Conf)","url":"setConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"setConfiguration(Conf)","url":"setConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"setConfiguration(Conf)","url":"setConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setConfiguration(Conf)","url":"setConfiguration(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setContext(AzkarraContext)","url":"setContext(io.streamthoughts.azkarra.api.AzkarraContext)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"setDescription(String)","url":"setDescription(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setEnableComponentScan(boolean)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"setException(String)","url":"setException(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironmentAware","l":"setExecutionEnvironment(StreamsExecutionEnvironment)","url":"setExecutionEnvironment(io.streamthoughts.azkarra.api.StreamsExecutionEnvironment)"},{"p":"io.streamthoughts.azkarra.runtime.streams","c":"DefaultApplicationIdBuilder","l":"setExecutionEnvironment(StreamsExecutionEnvironment)","url":"setExecutionEnvironment(io.streamthoughts.azkarra.api.StreamsExecutionEnvironment)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setFailedResultSet(ErrorResultSet)","url":"setFailedResultSet(io.streamthoughts.azkarra.api.query.result.ErrorResultSet)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setFailedResultSet(List<ErrorResultSet>)","url":"setFailedResultSet(java.util.List)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"setId(String)","url":"setId(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryBuilder","l":"setIgnoreHostnameVerification(boolean)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setIgnoreSslHostnameVerification(boolean)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setKeyPassword(String)","url":"setKeyPassword(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setKeyStoreLocation(String)","url":"setKeyStoreLocation(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setKeyStorePassword(String)","url":"setKeyStorePassword(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setKeyStoreType(String)","url":"setKeyStoreType(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setListener(String)","url":"setListener(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"BannerPrinterBuilder","l":"setLogger(Logger)","url":"setLogger(org.slf4j.Logger)"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"BannerPrinterBuilder","l":"setLoggerLevel(Level)","url":"setLoggerLevel(org.slf4j.event.Level)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"JAASAuthentication","l":"setLoginContext(LoginContext)","url":"setLoginContext(javax.security.auth.login.LoginContext)"},{"p":"io.streamthoughts.azkarra.streams.banner","c":"BannerPrinterBuilder","l":"setMode(Banner.Mode)","url":"setMode(io.streamthoughts.azkarra.api.banner.Banner.Mode)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"setName(String)","url":"setName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setPort(int)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"setRegisterShutdownHook(boolean)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"setRegisterShutdownHook(boolean)"},{"p":"io.streamthoughts.azkarra.streams","c":"AzkarraApplication","l":"setRegisterShutdownHook(boolean)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentModule","l":"setRegistry(ComponentRegistry)","url":"setRegistry(io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentRegistryAware","l":"setRegistry(ComponentRegistry)","url":"setRegistry(io.streamthoughts.azkarra.api.components.ComponentRegistry)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"setRocksDBConfig(RocksDBConfig)","url":"setRocksDBConfig(io.streamthoughts.azkarra.api.config.RocksDBConfig)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"setRocksDBConfig(RocksDBConfig)","url":"setRocksDBConfig(io.streamthoughts.azkarra.api.config.RocksDBConfig)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setServer(String)","url":"setServer(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"setSince(long)"},{"p":"io.streamthoughts.azkarra.http.query","c":"HttpRemoteQueryBuilder","l":"setSSLContextFactory(SSLContextFactory)","url":"setSSLContextFactory(io.streamthoughts.azkarra.http.security.SSLContextFactory)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"setState(State)","url":"setState(io.streamthoughts.azkarra.api.State)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"setState(State)","url":"setState(io.streamthoughts.azkarra.api.State)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"setState(String, long)","url":"setState(java.lang.String,long)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setStatus(QueryStatus)","url":"setStatus(io.streamthoughts.azkarra.api.query.result.QueryStatus)"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ComplexWordCountTopology","l":"setStopWordsService(StopWordsService)","url":"setStopWordsService(io.streamthoughts.examples.azkarra.dependency.StopWordsService)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setStoreName(String)","url":"setStoreName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setStoreType(String)","url":"setStoreType(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setSuccessResultSet(List<SuccessResultSet<K, V>>)","url":"setSuccessResultSet(java.util.List)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setTimeout(boolean)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryResultBuilder","l":"setTook(long)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setTrustStoreLocation(String)","url":"setTrustStoreLocation(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setTrustStorePassword(String)","url":"setTrustStorePassword(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setTrustStoreType(String)","url":"setTrustStoreType(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UsernamePasswordAuthentication","l":"setUserDetails(UserDetails)","url":"setUserDetails(io.streamthoughts.azkarra.http.security.auth.UserDetails)"},{"p":"io.streamthoughts.azkarra.http","c":"ServerConfBuilder","l":"setUserIdentityManager(Class<? extends UsersIdentityManager>)","url":"setUserIdentityManager(java.lang.Class)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicAuthenticator","l":"setUserIdentityManager(UsersIdentityManager)","url":"setUserIdentityManager(io.streamthoughts.azkarra.http.security.auth.UsersIdentityManager)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.Builder","l":"setVersion(String)","url":"setVersion(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"setWaitForTopicsToBeCreated(boolean)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"setWaitForTopicsToBeCreated(boolean)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"SHUTDOWN"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"SimpleAuthorizationManager","l":"SimpleAuthorizationManager()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentFactory","l":"singletonOf(T)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node.Type","l":"SINK"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SinkNodeBuilder","l":"SinkNodeBuilder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.streams.banner.internal","c":"SL4JLoggerPrintStream","l":"SL4JLoggerPrintStream(Logger, Level)","url":"%3Cinit%3E(org.slf4j.Logger,org.slf4j.event.Level)"},{"p":"io.streamthoughts.azkarra.api.time","c":"SystemTime","l":"sleep(Duration)","url":"sleep(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"sleep(Duration)","url":"sleep(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node.Type","l":"SOURCE"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.SourceNodeBuilder","l":"SourceNodeBuilder()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_ENABLE"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_IGNORE_HOSTNAME_VERIFICATION"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_KEY_PASSWORD_CONFIG"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_KEYSTORE_LOCATION"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_KEYSTORE_PASSWORD"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_KEYSTORE_TYPE"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_TRUSTSTORE_LOCATION"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_TRUSTSTORE_PASSWORD"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityConfig","l":"SSL_TRUSTSTORE_TYPE"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"SSLAuthenticationContext","l":"SSLAuthenticationContext(SecurityMechanism, InetAddress, SecurityContext, SSLSession)","url":"%3Cinit%3E(io.streamthoughts.azkarra.http.security.SecurityMechanism,java.net.InetAddress,io.undertow.security.api.SecurityContext,javax.net.ssl.SSLSession)"},{"p":"io.streamthoughts.examples.azkarra.security","c":"SSLAuthenticationExample","l":"SSLAuthenticationExample()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"SSLClientAuthentication","l":"SSLClientAuthentication(Principal, X509CertificateCredentials)","url":"%3Cinit%3E(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.X509CertificateCredentials)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SSLContextFactory","l":"SSLContextFactory(SecurityConfig)","url":"%3Cinit%3E(io.streamthoughts.azkarra.http.security.SecurityConfig)"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"ExceptionHeader","l":"STACKTRACE"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"start()"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"start()"},{"p":"io.streamthoughts.azkarra.api.server","c":"EmbeddedHttpServer","l":"start()"},{"p":"io.streamthoughts.azkarra.http","c":"UndertowEmbeddedServer","l":"start()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"start()"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"start()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"start(Executor, boolean)","url":"start(java.util.concurrent.Executor,boolean)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PropertiesFileUsersIdentityManager","l":"startAutoReload(Duration)","url":"startAutoReload(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api","c":"State","l":"STARTED"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"startedSince()"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"startStreamsTopology(String, String, String, Executed)","url":"startStreamsTopology(java.lang.String,java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"startStreamsTopology(String, String, String, Executed)","url":"startStreamsTopology(java.lang.String,java.lang.String,java.lang.String,io.streamthoughts.azkarra.api.Executed)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"state()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"state()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"state()"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"state()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse.State","l":"State(String, long)","url":"%3Cinit%3E(java.lang.String,long)"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"Status(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"stop()"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"stop()"},{"p":"io.streamthoughts.azkarra.api.server","c":"EmbeddedHttpServer","l":"stop()"},{"p":"io.streamthoughts.azkarra.http","c":"UndertowEmbeddedServer","l":"stop()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"stop()"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"stop(ApplicationId, boolean)","url":"stop(io.streamthoughts.azkarra.api.streams.ApplicationId,boolean)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"stop(ApplicationId, boolean)","url":"stop(io.streamthoughts.azkarra.api.streams.ApplicationId,boolean)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"stop(boolean)"},{"p":"io.streamthoughts.azkarra.api","c":"StreamsExecutionEnvironment","l":"stop(boolean)"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"stop(boolean)"},{"p":"io.streamthoughts.azkarra.runtime.env","c":"DefaultStreamsExecutionEnvironment","l":"stop(boolean)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Retry","l":"stopAfterDuration(Duration)","url":"stopAfterDuration(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Retry","l":"stopAfterMaxAttempts(int)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PropertiesFileUsersIdentityManager","l":"stopAutoReload()"},{"p":"io.streamthoughts.azkarra.api","c":"State","l":"STOPPED"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraStreamsService","l":"stopStreams(String, boolean)","url":"stopStreams(java.lang.String,boolean)"},{"p":"io.streamthoughts.azkarra.runtime.service","c":"LocalAzkarraStreamsService","l":"stopStreams(String, boolean)","url":"stopStreams(java.lang.String,boolean)"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"storeName()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyedLocalStoreQuery","l":"storeName()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"stores()"},{"p":"io.streamthoughts.azkarra.api.query","c":"LocalStoreQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueCountQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetAllQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetRangeQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionFetchKeyRangeQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"SessionFetchQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchAllQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchKeyRangeQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowFetchTimeRangeQuery","l":"storeType()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"WindowGetAllQuery","l":"storeType()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"StreamsApplication","l":"StreamsApplication()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.examples.azkarra.noannotation","c":"StreamsApplication","l":"StreamsApplication()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"streamsConfig()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"streamsConfig()"},{"p":"io.streamthoughts.azkarra.api.providers","c":"TopologyDescriptor","l":"streamsConfigs()"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsDeleteHandler","l":"StreamsDeleteHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetConfigHandler","l":"StreamsGetConfigHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetDetailsHandler","l":"StreamsGetDetailsHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetListHandler","l":"StreamsGetListHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetMetricsHandler","l":"StreamsGetMetricsHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsGetStatusHandler","l":"StreamsGetStatusHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.health.internal","c":"StreamsHealthIndicator","l":"StreamsHealthIndicator()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsInstanceResponse","l":"StreamsInstanceResponse(String, long, String, String, String, StreamsInstanceResponse.State, String)","url":"%3Cinit%3E(java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,io.streamthoughts.azkarra.http.data.StreamsInstanceResponse.State,java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsPostHandler","l":"StreamsPostHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsRestartHandler","l":"StreamsRestartHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"StreamsServerInfo(String, String, int, Set<String>, Set<TopicPartitions>, boolean)","url":"%3Cinit%3E(java.lang.String,java.lang.String,int,java.util.Set,java.util.Set,boolean)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"StreamsServerInfo(String, String, int, Set<String>, Set<TopicPartitions>)","url":"%3Cinit%3E(java.lang.String,java.lang.String,int,java.util.Set,java.util.Set)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsStatus","l":"StreamsStatus(String, String, Set<ThreadMetadata>)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.Set)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"StreamsStopHandler","l":"StreamsStopHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.http.data","c":"StreamsTopologyRequest","l":"StreamsTopologyRequest(String, String, String, String, String, Map<String, Object>)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"SUCCESS"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"success(V)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"SuccessResultSet","l":"SuccessResultSet(String, boolean, List<KV<K, V>>)","url":"%3Cinit%3E(java.lang.String,boolean,java.util.List)"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"swap()"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"SYSTEM"},{"p":"io.streamthoughts.azkarra.api.time","c":"SystemTime","l":"SystemTime()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"tags()"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TaskMetadataSerializer","l":"TaskMetadataSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ConfigurableStopWordsService","l":"test(String)","url":"test(java.lang.String)"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"StopWordsService","l":"test(String)","url":"test(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.model.predicate","c":"GroupMetricFilter","l":"test(Tuple<String, Metric>)","url":"test(io.streamthoughts.azkarra.api.monad.Tuple)"},{"p":"io.streamthoughts.azkarra.api.model.predicate","c":"NameMetricFilter","l":"test(Tuple<String, Metric>)","url":"test(io.streamthoughts.azkarra.api.monad.Tuple)"},{"p":"io.streamthoughts.azkarra.api.model.predicate","c":"NonNullMetricFilter","l":"test(Tuple<String, Metric>)","url":"test(io.streamthoughts.azkarra.api.monad.Tuple)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"threadMetadata()"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"ThreadMetadataSerializer","l":"ThreadMetadataSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamsthoughts.azkarra.commons.error","c":"ExceptionHeader","l":"TIMESTAMP"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"timestamp()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"TIMESTAMPED_KEY_VALUE"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"TIMESTAMPED_WINDOW"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"QueryBuilder","l":"timestampedKeyValue()"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"TimestampedValue(long, V)","url":"%3Cinit%3E(long,V)"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"TimestampedValue(V)","url":"%3Cinit%3E(V)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"QueryBuilder","l":"timestampedWindow()"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TimestampSerializer","l":"TimestampSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"toEither()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"LocalStoreQueryBuilder","l":"toInvalidQueryException(List<Error>)","url":"toInvalidQueryException(java.util.List)"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"toISODate()"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"toISODate(long, ZoneId)","url":"toISODate(long,java.time.ZoneId)"},{"p":"io.streamthoughts.azkarra.api.time","c":"Time","l":"toISODate(long)"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"toKafkaKeyValue()"},{"p":"io.streamthoughts.azkarra.api.query","c":"LocalStoreQuery","l":"toKeyValueListAndClose(KeyValueIterator<K, V>)","url":"toKeyValueListAndClose(org.apache.kafka.streams.state.KeyValueIterator)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.LeftProjection","l":"toOptional()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Either.RightProjection","l":"toOptional()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"toOptional()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"toOptional()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopicPartitions","l":"TopicPartitions(String, Set<Integer>)","url":"%3Cinit%3E(java.lang.String,java.util.Set)"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TopicPartitionSerializer","l":"TopicPartitionSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"TOPOLOGY_DESCRIPTION_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"TOPOLOGY_NAME_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"TOPOLOGY_PROVIDER_ALIAS_CONFIG"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"TOPOLOGY_STREAMS_CONFIG"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"topology()"},{"p":"io.streamthoughts.azkarra.api.providers","c":"TopologyDescriptor","l":"TopologyDescriptor(String, Class<T>, String, Conf)","url":"%3Cinit%3E(java.lang.String,java.lang.Class,java.lang.String,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.providers","c":"TopologyDescriptor","l":"TopologyDescriptor(String, Class<T>, String)","url":"%3Cinit%3E(java.lang.String,java.lang.Class,java.lang.String)"},{"p":"io.streamthoughts.azkarra.runtime.components","c":"TopologyDescriptorFactory","l":"TopologyDescriptorFactory()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"TopologyDescriptorSerializer","l":"TopologyDescriptorSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.runtime.streams.topology","c":"TopologyFactory","l":"TopologyFactory(StreamsExecutionEnvironment)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.StreamsExecutionEnvironment)"},{"p":"io.streamthoughts.azkarra.http.handler","c":"TopologyListHandler","l":"TopologyListHandler(AzkarraStreamsService)","url":"%3Cinit%3E(io.streamthoughts.azkarra.api.AzkarraStreamsService)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamsContainer","l":"topologyMetadata()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"TopologyMetadata(String, String, String, TopologyDescription, Conf)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,org.apache.kafka.streams.TopologyDescription,io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api","c":"AzkarraContext","l":"topologyProviders()"},{"p":"io.streamthoughts.azkarra.runtime.context","c":"DefaultAzkarraContext","l":"topologyProviders()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"EnvironmentConfig","l":"topologyStreamConfigs()"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.errors","c":"Error","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Environment","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.model","c":"MetricGroup","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Retry","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.providers","c":"TopologyDescriptor","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryParams","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"KeyValueGetRangeQuery","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryError","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.server","c":"ServerInfo","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"ApplicationId","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsServerInfo","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"toString()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health","l":"toString()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"toString()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicRolePrincipal","l":"toString()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"BasicUserPrincipal","l":"toString()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"RoleGrantedAuthority","l":"toString()"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try","l":"transform(Function<V, Try<U>>, Function<Throwable, Try<U>>)","url":"transform(java.util.function.Function,java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Failure","l":"transform(Function<V, Try<U>>, Function<Throwable, Try<U>>)","url":"transform(java.util.function.Function,java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Retriable","l":"transform(Function<V, Try<U>>, Function<Throwable, Try<U>>)","url":"transform(java.util.function.Function,java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Try.Success","l":"transform(Function<V, Try<U>>, Function<Throwable, Try<U>>)","url":"transform(java.util.function.Function,java.util.function.Function)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Tuple","l":"Tuple(L, R)","url":"%3Cinit%3E(L,R)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"type()"},{"p":"io.streamthoughts.azkarra.api.query","c":"QueryInfo","l":"type()"},{"p":"io.streamthoughts.azkarra.streams.context.internal","c":"TopologyConfig","l":"type()"},{"p":"io.streamthoughts.azkarra.api.util","c":"TypeConverter","l":"TypeConverter()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.security","c":"UnauthorizedAccessException","l":"UnauthorizedAccessException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams.listener","c":"CompositeUncaughtExceptionHandler","l":"uncaughtException(Thread, Throwable)","url":"uncaughtException(java.lang.Thread,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UndertowAuthenticationContext","l":"UndertowAuthenticationContext(SecurityMechanism, InetAddress, SecurityContext)","url":"%3Cinit%3E(io.streamthoughts.azkarra.http.security.SecurityMechanism,java.net.InetAddress,io.undertow.security.api.SecurityContext)"},{"p":"io.streamthoughts.azkarra.http","c":"UndertowEmbeddedServerProvider","l":"UndertowEmbeddedServerProvider()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"UNKNOWN"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"unknown()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Credentials.UnsupportedCredentialException","l":"UnsupportedCredentialException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Credentials.UnsupportedCredentialException","l":"UnsupportedCredentialException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"Credentials.UnsupportedCredentialException","l":"UnsupportedCredentialException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"UNVAILABLE"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"GlobalResultSet","l":"unwrap()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UndertowAuthenticationContext","l":"unwrap()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Status","l":"UP"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"up()"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraAccount","l":"userDetails()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UserDetails","l":"UserDetails(String, PasswordCredentials, Collection<GrantedAuthority>)","url":"%3Cinit%3E(java.lang.String,io.streamthoughts.azkarra.http.security.auth.PasswordCredentials,java.util.Collection)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"UsernamePasswordAuthentication","l":"UsernamePasswordAuthentication(Principal, PasswordCredentials)","url":"%3Cinit%3E(java.security.Principal,io.streamthoughts.azkarra.http.security.auth.PasswordCredentials)"},{"p":"io.streamthoughts.azkarra.api.util","c":"Utils","l":"Utils()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"Query","l":"validate(QueryParams)","url":"validate(io.streamthoughts.azkarra.api.query.QueryParams)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"validates(Predicate<? super T>, Error)","url":"validates(java.util.function.Predicate,io.streamthoughts.azkarra.api.errors.Error)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Validator","l":"validates(Predicate<? super T>, String)","url":"validates(java.util.function.Predicate,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"LocalStoreQueryBuilder","l":"validates(QueryParams)","url":"validates(io.streamthoughts.azkarra.api.query.QueryParams)"},{"p":"io.streamthoughts.azkarra.api.annotations","c":"DefaultStreamsConfig","l":"value()"},{"p":"io.streamthoughts.azkarra.api.annotations","c":"DefaultStreamsConfigs","l":"value()"},{"p":"io.streamthoughts.azkarra.api.annotations","c":"StreamsName","l":"value()"},{"p":"io.streamthoughts.azkarra.api.model","c":"KV","l":"value()"},{"p":"io.streamthoughts.azkarra.api.model","c":"Metric","l":"value()"},{"p":"io.streamthoughts.azkarra.api.model","c":"TimestampedValue","l":"value()"},{"p":"io.streamthoughts.azkarra.streams.autoconfigure.annotations","c":"ComponentScan","l":"value()"},{"p":"io.streamthoughts.azkarra.streams.autoconfigure.annotations","c":"EnableEmbeddedHttpServer","l":"value()"},{"p":"io.streamthoughts.azkarra.api","c":"State","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.banner","c":"Banner.Mode","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node.Type","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityMechanism","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials.Type","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationResult","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api","c":"State","l":"values()"},{"p":"io.streamthoughts.azkarra.api.banner","c":"Banner.Mode","l":"values()"},{"p":"io.streamthoughts.azkarra.api.model","c":"StreamsTopologyGraph.Node.Type","l":"values()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreOperation","l":"values()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"values()"},{"p":"io.streamthoughts.azkarra.api.query.result","c":"QueryStatus","l":"values()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"values()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"StreamsState","l":"values()"},{"p":"io.streamthoughts.azkarra.http.security","c":"SecurityMechanism","l":"values()"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials.Type","l":"values()"},{"p":"io.streamthoughts.azkarra.http.security.authorizer","c":"AuthorizationResult","l":"values()"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraIdentityManager","l":"verify(Account)","url":"verify(io.undertow.security.idm.Account)"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraIdentityManager","l":"verify(Credential)","url":"verify(io.undertow.security.idm.Credential)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"DigestPasswordCredentials","l":"verify(Object)","url":"verify(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PasswordCredentials","l":"verify(Object)","url":"verify(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"PlainPasswordCredentials","l":"verify(Object)","url":"verify(java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.security","c":"AzkarraIdentityManager","l":"verify(String, Credential)","url":"verify(java.lang.String,io.undertow.security.idm.Credential)"},{"p":"io.streamthoughts.azkarra.http.security","c":"AllowAllHostNameVerifier","l":"verify(String, SSLSession)","url":"verify(java.lang.String,javax.net.ssl.SSLSession)"},{"p":"io.streamthoughts.azkarra.api.components","c":"ComponentDescriptor","l":"version()"},{"p":"io.streamthoughts.azkarra.api.components","c":"Versioned","l":"version()"},{"p":"io.streamthoughts.azkarra.api.streams","c":"TopologyProvider","l":"version()"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyMetadata","l":"version()"},{"p":"io.streamthoughts.examples.azkarra.dependency","c":"ComplexWordCountTopology","l":"version()"},{"p":"io.streamthoughts.examples.azkarra.topology","c":"BasicWordCountTopology","l":"version()"},{"p":"io.streamthoughts.examples.azkarra.topology","c":"ConfigurableWordCountTopology","l":"version()"},{"p":"io.streamthoughts.examples.azkarra","c":"Version","l":"Version()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.util","c":"Version","l":"Version(int, int, int, String)","url":"%3Cinit%3E(int,int,int,java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams.admin","c":"AdminClientUtils","l":"waitForTopicToExist(AdminClient, Set<String>)","url":"waitForTopicToExist(org.apache.kafka.clients.admin.AdminClient,java.util.Set)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"State","l":"WAITING_FOR_TOPICS"},{"p":"io.streamthoughts.azkarra.http.routes","c":"WebUIHttpRoutes","l":"WebUIHttpRoutes()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api.query","c":"StoreType","l":"WINDOW"},{"p":"io.streamthoughts.azkarra.api.query.internal","c":"QueryBuilder","l":"window()"},{"p":"io.streamthoughts.azkarra.http.json.serializers","c":"WindowedSerializer","l":"WindowedSerializer()","url":"%3Cinit%3E()"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"with(Conf)","url":"with(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"with(Conf)","url":"with(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"with(Duration)","url":"with(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"with(Map<String, ?>)","url":"with(java.util.Map)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"with(String, int)","url":"with(java.lang.String,int)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"with(String, Object)","url":"with(java.lang.String,java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"with(String, Object)","url":"with(java.lang.String,java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamContainerBuilder","l":"withApplicationId(ApplicationId)","url":"withApplicationId(io.streamthoughts.azkarra.api.streams.ApplicationId)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withBufferSize(int)"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer.Builder","l":"withConf(Conf)","url":"withConf(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"withConfig(Conf)","url":"withConfig(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"withConfig(String, Object)","url":"withConfig(java.lang.String,java.lang.Object)"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"withDescription(String)","url":"withDescription(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer.Builder","l":"withDescription(String)","url":"withDescription(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"withDetails(String, Object)","url":"withDetails(java.lang.String,java.lang.Object)"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"withException(Throwable)","url":"withException(java.lang.Throwable)"},{"p":"io.streamthoughts.azkarra.api.config","c":"Conf","l":"withFallback(Conf)","url":"withFallback(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.config","c":"ConfBuilder","l":"withFallback(Conf)","url":"withFallback(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.config","c":"EmptyConf","l":"withFallback(Conf)","url":"withFallback(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.config","c":"MapConf","l":"withFallback(Conf)","url":"withFallback(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"AzkarraConf","l":"withFallback(Conf)","url":"withFallback(io.streamthoughts.azkarra.api.config.Conf)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Retry","l":"withFixedWaitDuration(Duration)","url":"withFixedWaitDuration(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"withListener(String)","url":"withListener(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withLogDir(String)","url":"withLogDir(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withLogLevel(String)","url":"withLogLevel(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withLogMaxFileSize(int)"},{"p":"io.streamthoughts.azkarra.api.monad","c":"Retry","l":"withMaxAttempts(int)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withMaxWriteBufferNumber(int)"},{"p":"io.streamthoughts.azkarra.api","c":"Executed","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer.Builder","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.config","c":"HttpServerConf","l":"withPort(int)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"withQueryTimeout(Duration)","url":"withQueryTimeout(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"withRemoteAccessAllowed(boolean)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamContainerBuilder","l":"withRestoreListeners(List<StateRestoreListener>)","url":"withRestoreListeners(java.util.List)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"withRetries(int, Duration)","url":"withRetries(int,java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"withRetries(int)"},{"p":"io.streamthoughts.azkarra.api.query","c":"Queried","l":"withRetryBackoffMs(Duration)","url":"withRetryBackoffMs(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamContainerBuilder","l":"withStateListeners(List<KafkaStreams.StateListener>)","url":"withStateListeners(java.util.List)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withStatsDisable()"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withStatsDumpPeriod(Duration)","url":"withStatsDumpPeriod(java.time.Duration)"},{"p":"io.streamthoughts.azkarra.api.config","c":"RocksDBConfig","l":"withStatsEnable()"},{"p":"io.streamthoughts.azkarra.http.health","c":"Health.Builder","l":"withStatus(Status)","url":"withStatus(io.streamthoughts.azkarra.http.health.Status)"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer.Builder","l":"withTopology(Topology)","url":"withTopology(org.apache.kafka.streams.Topology)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamContainerBuilder","l":"withTopologyContainer(TopologyContainer)","url":"withTopologyContainer(io.streamthoughts.azkarra.api.streams.topology.TopologyContainer)"},{"p":"io.streamthoughts.azkarra.api.streams","c":"KafkaStreamContainerBuilder","l":"withUncaughtExceptionHandler(List<Thread.UncaughtExceptionHandler>)","url":"withUncaughtExceptionHandler(java.util.List)"},{"p":"io.streamthoughts.azkarra.api.streams.topology","c":"TopologyContainer.Builder","l":"withVersion(String)","url":"withVersion(java.lang.String)"},{"p":"io.streamthoughts.azkarra.streams.banner.internal","c":"SL4JLoggerPrintStream","l":"write(byte[], int, int)","url":"write(byte[],int,int)"},{"p":"io.streamthoughts.azkarra.streams.banner.internal","c":"SL4JLoggerPrintStream","l":"write(int)"},{"p":"io.streamthoughts.azkarra.http.security.auth","c":"X509CertificateCredentials","l":"X509CertificateCredentials(X509Certificate)","url":"%3Cinit%3E(java.security.cert.X509Certificate)"},{"p":"io.streamthoughts.azkarra.http.security.handler","c":"XMLHttpRequestAwareAuthCallHandler","l":"XMLHttpRequestAwareAuthCallHandler(HttpHandler)","url":"%3Cinit%3E(io.undertow.server.HttpHandler)"}]